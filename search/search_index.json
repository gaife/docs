{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"GAIFE Documentation","text":"<p>Welcome to the official GAIFE documentation of our product and API.</p>"},{"location":"#product-documentation","title":"Product Documentation","text":"<ul> <li>Agent - Guides for the GAIFE Agent product<ul> <li>Getting Started</li> <li>Tasks Overview</li> <li>Knowledge Base</li> </ul> </li> </ul>"},{"location":"#api-documentation","title":"API Documentation","text":"<ul> <li>Chat API - Developer integration with GAIFE Chat<ul> <li>Conversations</li> <li>Messages</li> <li>Webhooks</li> </ul> </li> </ul>"},{"location":"#api-access-authentication","title":"API Access &amp; Authentication","text":"<p>To manage your API keys:</p> <ol> <li> <p>Visit the API Access page at: <code>https://beta.gaife.com/organizations/{your_org}/api-access</code></p> </li> <li> <p>Here you can:</p> <ul> <li>Create new API keys</li> <li>View existing keys</li> <li>Revoke or rotate keys as needed</li> <li>Set key permissions and expiration dates</li> </ul> </li> </ol> <p>Important</p> <p>Keep your API keys secure and never share them in public repositories or client-side code.</p>"},{"location":"#base-url","title":"Base URL","text":"<ul> <li> <p>The base URL for all API requests is:</p> <pre><code>https://beta-api.gaife.com/developer\n</code></pre> </li> </ul>"},{"location":"#authentication","title":"Authentication","text":"<ul> <li> <p>All API endpoints require authentication using an API key in the Bearer token format in the Authorization header:</p> <pre><code>Authorization: Bearer your_api_key_here\n</code></pre> </li> </ul>"},{"location":"agent/","title":"Agent Builder Documentation","text":"<p>Welcome to the Agent Builder documentation. This comprehensive guide will help you understand and effectively use the Agent Builder to create powerful workflow agents.</p>"},{"location":"agent/#getting-started","title":"Getting Started \ud83d\ude80","text":"<ul> <li>Introduction - Learn about Agent Builder and its capabilities</li> <li>Core Concepts - Understand the fundamental concepts</li> <li>Quick Start - Create your first agent in minutes</li> </ul>"},{"location":"agent/#core-components","title":"Core Components \ud83d\udee0\ufe0f","text":""},{"location":"agent/#task-types","title":"Task Types","text":"<p>Build your workflow using four powerful task types:</p> Task Type Description Use Case AI Task Intelligent processing using AI Text analysis, content generation Human Task Human intervention and approvals Document review, decision making App Task Integration with external tools Data processing, API interactions Coder Task Custom code execution Complex calculations, transformations"},{"location":"agent/#configuration","title":"Configuration","text":"<p>Master the configuration of your agents:</p> <ul> <li>Input Parameters - Configure task inputs</li> <li>Output Parameters - Define expected outputs</li> <li>Assignment Rules - Manage task assignments</li> </ul>"},{"location":"agent/#essential-guides","title":"Essential Guides \ud83d\udcda","text":"<p>Learn best practices and validation rules:</p> <ol> <li> <p>Assignment Rules Guide</p> <ul> <li>User assignments</li> <li>Team assignments</li> <li>Assignment logic</li> </ul> </li> <li> <p>Validation Rules</p> <ul> <li>Input validation</li> <li>Output validation</li> <li>Common validation patterns</li> </ul> </li> <li> <p>Best Practices</p> <ul> <li>Task design</li> <li>Error handling</li> <li>Performance optimization</li> </ul> </li> </ol>"},{"location":"agent/#examples-and-tutorials","title":"Examples and Tutorials \ud83d\udca1","text":"<p>Get hands-on experience:</p> <ul> <li>Task Examples - Real-world task configurations</li> </ul>"},{"location":"agent/#quick-references","title":"Quick References \ud83d\udccb","text":""},{"location":"agent/#common-task-configurations","title":"Common Task Configurations","text":"<pre><code>{\n    \"name\": \"Task Name\",\n    \"type\": \"TASK_TYPE\",\n    \"instructions\": \"Task instructions\",\n    \"input_parameters\": [],\n    \"expected_output\": [],\n    \"error_policy\": \"RAISE\"\n}\n</code></pre>"},{"location":"agent/#assignment-rule-example","title":"Assignment Rule Example","text":"<pre><code>{\n    \"rule_type\": \"Exception\",\n    \"assignment_type\": \"User\",\n    \"assignee_id\": \"user_id\"\n}\n</code></pre>"},{"location":"agent/#support-and-resources","title":"Support and Resources \ud83c\udd98","text":"<ul> <li>Documentation Updates - Check regularly for the latest documentation</li> <li>Community Support - Join our community forum</li> <li>Technical Support - Contact our support team</li> </ul>"},{"location":"agent/examples/task-examples/","title":"Task Examples","text":""},{"location":"agent/examples/task-examples/#overview","title":"Overview","text":"<p>This guide provides practical examples of task configurations for common use cases. Each example includes complete configuration and explanation.</p>"},{"location":"agent/examples/task-examples/#content-review-workflow","title":"Content Review Workflow","text":""},{"location":"agent/examples/task-examples/#1-generate-content-ai-task","title":"1. Generate Content (AI Task)","text":"<pre><code>{\n    \"type\": \"TASK\",\n    \"block\": {\n        \"name\": \"Generate Blog Post\",\n        \"instructions\": \"Generate a blog post about the provided topic following brand guidelines\",\n        \"input_parameters\": [\n            {\n                \"name\": \"topic\",\n                \"type\": \"STRING\",\n                \"description\": \"Blog post topic\",\n                \"required\": true,\n                \"source\": \"task_config\"\n            },\n            {\n                \"name\": \"tone\",\n                \"type\": \"STRING\",\n                \"description\": \"Writing tone\",\n                \"required\": true,\n                \"source\": \"task_config\"\n            },\n            {\n                \"name\": \"word_count\",\n                \"type\": \"INTEGER\",\n                \"description\": \"Target word count\",\n                \"required\": true,\n                \"source\": \"task_config\"\n            }\n        ],\n        \"expected_output\": [\n            {\n                \"name\": \"content\",\n                \"type\": \"STRING\",\n                \"description\": \"Generated blog post content\"\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"agent/examples/task-examples/#2-review-content-human-task","title":"2. Review Content (Human Task)","text":"<pre><code>{\n    \"type\": \"HUMAN_TASK\",\n    \"block\": {\n        \"name\": \"Review Blog Post\",\n        \"instructions\": \"Review the generated blog post for quality, accuracy, and brand alignment\",\n        \"dependencies\": [\"Generate Blog Post\"]\n    }\n}\n</code></pre>"},{"location":"agent/examples/task-examples/#3-format-document-app-task","title":"3. Format Document (App Task)","text":"<pre><code>{\n    \"type\": \"APP_TASK\",\n    \"block\": {\n        \"name\": \"Create PDF\",\n        \"provider\": \"pdf\",\n        \"tool_name\": \"writer\",\n        \"tool_id\": 12,\n        \"input_parameters\": [\n            {\n                \"name\": \"content\",\n                \"type\": \"STRING\",\n                \"description\": \"Blog post content\",\n                \"required\": true,\n                \"source\": \"task_config\"\n            },\n            {\n                \"name\": \"template\",\n                \"type\": \"STRING\",\n                \"description\": \"PDF template\",\n                \"required\": true,\n                \"source\": \"task_config\"\n            }\n        ],\n        \"expected_output\": [\n            {\n                \"name\": \"pdf_url\",\n                \"type\": \"STRING\",\n                \"description\": \"URL of the generated PDF\"\n            }\n        ],\n        \"dependencies\": [\"Review Blog Post\"]\n    }\n}\n</code></pre>"},{"location":"agent/examples/task-examples/#data-processing-workflow","title":"Data Processing Workflow","text":""},{"location":"agent/examples/task-examples/#1-process-data-coder-task","title":"1. Process Data (Coder Task)","text":"<pre><code>{\n    \"type\": \"CODER\",\n    \"block\": {\n        \"name\": \"Process CSV Data\",\n        \"code_artifact_id\": 123,\n        \"input_parameters\": [\n            {\n                \"name\": \"csv_data\",\n                \"type\": \"ARRAY\",\n                \"description\": \"Raw CSV data\",\n                \"required\": true,\n                \"source\": \"task_config\"\n            },\n            {\n                \"name\": \"processing_rules\",\n                \"type\": \"OBJECT\",\n                \"description\": \"Data processing rules\",\n                \"required\": true,\n                \"properties\": [\n                    {\n                        \"name\": \"columns\",\n                        \"type\": \"ARRAY\",\n                        \"description\": \"Columns to process\"\n                    },\n                    {\n                        \"name\": \"aggregation\",\n                        \"type\": \"STRING\",\n                        \"description\": \"Aggregation method\"\n                    }\n                ]\n            }\n        ],\n        \"expected_output\": [\n            {\n                \"name\": \"processed_data\",\n                \"type\": \"ARRAY\",\n                \"description\": \"Processed data\"\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"agent/examples/task-examples/#2-validate-results-ai-task","title":"2. Validate Results (AI Task)","text":"<pre><code>{\n    \"type\": \"TASK\",\n    \"block\": {\n        \"name\": \"Validate Data\",\n        \"instructions\": \"Analyze the processed data for anomalies and validation issues\",\n        \"input_parameters\": [\n            {\n                \"name\": \"data\",\n                \"type\": \"ARRAY\",\n                \"description\": \"Processed data to validate\",\n                \"required\": true\n            }\n        ],\n        \"expected_output\": [\n            {\n                \"name\": \"validation_result\",\n                \"type\": \"OBJECT\",\n                \"properties\": {\n                    \"is_valid\": \"BOOLEAN\",\n                    \"issues\": \"ARRAY\",\n                    \"recommendations\": \"ARRAY\"\n                }\n            }\n        ],\n        \"dependencies\": [\"Process CSV Data\"]\n    }\n}\n</code></pre>"},{"location":"agent/examples/task-examples/#3-review-results-human-task","title":"3. Review Results (Human Task)","text":"<pre><code>{\n    \"type\": \"HUMAN_TASK\",\n    \"block\": {\n        \"name\": \"Review Results\",\n        \"instructions\": \"Review the processed data and validation results. Approve if accurate or reject for reprocessing.\",\n        \"dependencies\": [\"Validate Data\"]\n    }\n}\n</code></pre>"},{"location":"agent/examples/task-examples/#document-generation-workflow","title":"Document Generation Workflow","text":""},{"location":"agent/examples/task-examples/#1-gather-data-app-task","title":"1. Gather Data (App Task)","text":"<pre><code>{\n    \"type\": \"APP_TASK\",\n    \"block\": {\n        \"name\": \"Fetch Data\",\n        \"provider\": \"database\",\n        \"tool_name\": \"query_executor\",\n        \"tool_id\": 34,\n        \"input_parameters\": [\n            {\n                \"name\": \"query_params\",\n                \"type\": \"OBJECT\",\n                \"description\": \"Query parameters\",\n                \"required\": true\n            }\n        ],\n        \"expected_output\": [\n            {\n                \"name\": \"query_results\",\n                \"type\": \"ARRAY\",\n                \"description\": \"Query results\"\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"agent/examples/task-examples/#2-generate-report-coder-task","title":"2. Generate Report (Coder Task)","text":"<pre><code>{\n    \"type\": \"CODER\",\n    \"block\": {\n        \"name\": \"Generate Report\",\n        \"code_artifact_id\": 456,\n        \"input_parameters\": [\n            {\n                \"name\": \"data\",\n                \"type\": \"ARRAY\",\n                \"description\": \"Report data\",\n                \"required\": true\n            },\n            {\n                \"name\": \"template\",\n                \"type\": \"STRING\",\n                \"description\": \"Report template\",\n                \"required\": true\n            }\n        ],\n        \"expected_output\": [\n            {\n                \"name\": \"report\",\n                \"type\": \"OBJECT\",\n                \"properties\": {\n                    \"content\": \"STRING\",\n                    \"metadata\": \"OBJECT\"\n                }\n            }\n        ],\n        \"dependencies\": [\"Fetch Data\"]\n    }\n}\n</code></pre>"},{"location":"agent/examples/task-examples/#task-combinations","title":"Task Combinations","text":""},{"location":"agent/examples/task-examples/#ai-human-review","title":"AI + Human Review","text":"<pre><code>graph TD\n    A[AI Analysis] --&gt; B[Human Review]\n    B -- Approved --&gt; C[Next Task]\n    B -- Rejected --&gt; A</code></pre>"},{"location":"agent/examples/task-examples/#app-coder-processing","title":"App + Coder Processing","text":"<pre><code>graph TD\n    A[App Data Fetch] --&gt; B[Coder Processing]\n    B --&gt; C[Result Storage]</code></pre>"},{"location":"agent/examples/task-examples/#best-practices","title":"Best Practices","text":"<ol> <li> <p>Task Dependencies</p> <ul> <li>Keep chains simple</li> <li>Validate data flow</li> <li>Handle all outcomes</li> </ul> </li> <li> <p>Error Handling</p> <ul> <li>Define recovery paths</li> <li>Set retry policies</li> <li>Log errors properly</li> </ul> </li> <li> <p>Performance</p> <ul> <li>Optimize data transfer</li> <li>Set appropriate timeouts</li> <li>Monitor execution time</li> </ul> </li> </ol>"},{"location":"agent/getting-started/concepts/","title":"Core Concepts","text":""},{"location":"agent/getting-started/concepts/#task-types","title":"Task Types","text":""},{"location":"agent/getting-started/concepts/#ai-task","title":"AI Task","text":"<ul> <li>Handles intelligent processing using AI capabilities.     <pre><code>graph LR\n    Input --&gt; AI[AI Processing] --&gt; Output</code></pre></li> </ul>"},{"location":"agent/getting-started/concepts/#human-task","title":"Human Task","text":"<ul> <li>Manages human interventions and approvals.     <pre><code>graph LR\n    Request --&gt; Human[Human Decision] --&gt; Response</code></pre></li> </ul>"},{"location":"agent/getting-started/concepts/#app-task","title":"App Task","text":"<ul> <li>Integrates with external tools and applications.     <pre><code>graph LR\n    Data --&gt; App[Tool Integration] --&gt; Result</code></pre></li> </ul>"},{"location":"agent/getting-started/concepts/#coder-task","title":"Coder Task","text":"<ul> <li>Executes custom code artifacts.     <pre><code>graph LR\n    Input --&gt; Code[Code Execution] --&gt; Output</code></pre></li> </ul>"},{"location":"agent/getting-started/concepts/#parameter-types","title":"Parameter Types","text":""},{"location":"agent/getting-started/concepts/#input-parameters","title":"Input Parameters","text":"<p>Data that flows into tasks:</p> <ul> <li>Basic types (string, number, boolean)</li> <li>Complex types (array, object)</li> <li>Special types (artifacts)</li> </ul>"},{"location":"agent/getting-started/concepts/#output-parameters","title":"Output Parameters","text":"<p>Results produced by tasks:</p> <ul> <li>Basic data types</li> <li>File outputs</li> <li>Media outputs</li> <li>Structured data</li> </ul>"},{"location":"agent/getting-started/concepts/#assignment-rules","title":"Assignment Rules","text":""},{"location":"agent/getting-started/concepts/#rule-types","title":"Rule Types","text":"<ol> <li> <p>Exception</p> <ul> <li>Error handling</li> <li>Special cases</li> </ul> </li> <li> <p>Human Feedback</p> <ul> <li>Approvals</li> <li>Reviews</li> </ul> </li> </ol>"},{"location":"agent/getting-started/concepts/#assignment-types","title":"Assignment Types","text":"<ol> <li> <p>User Assignment</p> <ul> <li>Direct user allocation</li> <li>Individual responsibility</li> </ul> </li> <li> <p>Team Assignment</p> <ul> <li>Group allocation</li> <li>Round-robin distribution</li> </ul> </li> </ol>"},{"location":"agent/getting-started/concepts/#workflow-concepts","title":"Workflow Concepts","text":""},{"location":"agent/getting-started/concepts/#dependencies","title":"Dependencies","text":"<pre><code>graph TD\n    A[Task A] --&gt; B[Task B]\n    B --&gt; C[Task C]</code></pre> <ul> <li>Sequential execution</li> <li>Parallel processing</li> <li>Conditional flows</li> </ul>"},{"location":"agent/getting-started/concepts/#error-policies","title":"Error Policies","text":"<ol> <li> <p>RAISE</p> <ul> <li>Stop execution</li> <li>Report error</li> </ul> </li> <li> <p>IGNORE</p> <ul> <li>Continue execution</li> <li>Log warning</li> </ul> </li> <li> <p>RETRY</p> <ul> <li>Attempt recovery</li> <li>Configurable attempts</li> </ul> </li> </ol>"},{"location":"agent/getting-started/concepts/#best-practices-overview","title":"Best Practices Overview","text":"<ol> <li> <p>Task Design</p> <ul> <li>Clear naming</li> <li>Proper description</li> <li>Error handling</li> </ul> </li> <li> <p>Parameter Configuration</p> <ul> <li>Type selection</li> <li>Validation rules</li> <li>Default values</li> </ul> </li> <li> <p>Assignment Setup</p> <ul> <li>Clear responsibilities</li> <li>Backup assignees</li> <li>Team distribution</li> </ul> </li> </ol>"},{"location":"agent/getting-started/introduction/","title":"Introduction to Agent Builder","text":""},{"location":"agent/getting-started/introduction/#what-is-an-agent","title":"What is an Agent?","text":"<p>An agent is a configurable workflow that can execute various types of tasks automatically. Each agent can contain multiple tasks that work together to achieve specific business objectives.</p>"},{"location":"agent/getting-started/introduction/#core-components","title":"Core Components","text":""},{"location":"agent/getting-started/introduction/#1-tasks","title":"1. Tasks","text":"<p>The building blocks of your agent:</p> <ul> <li>AI Tasks: For intelligent processing</li> <li>Human Tasks: For manual approvals and interventions</li> <li>App Tasks: For tool and application integrations</li> <li>Coder Tasks: For custom code execution</li> </ul>"},{"location":"agent/getting-started/introduction/#2-parameters","title":"2. Parameters","text":"<p>Define how data flows through your agent:</p> <ul> <li>Input Parameters: Data your tasks will process</li> <li>Output Parameters: Results from your tasks</li> </ul>"},{"location":"agent/getting-started/introduction/#3-assignment-rules","title":"3. Assignment Rules","text":"<p>Control who can interact with tasks:</p> <ul> <li>User assignments</li> <li>Team assignments</li> <li>Routing rules</li> </ul>"},{"location":"agent/getting-started/introduction/#why-use-agent-builder","title":"Why Use Agent Builder?","text":"<ol> <li> <p>Automation</p> <ul> <li>Streamline workflows</li> <li>Reduce manual effort</li> <li>Ensure consistency</li> </ul> </li> <li> <p>Flexibility</p> <ul> <li>Mix different task types</li> <li>Configure complex flows</li> <li>Adapt to changing needs</li> </ul> </li> <li> <p>Control</p> <ul> <li>Monitor execution</li> <li>Handle errors</li> <li>Track performance</li> </ul> </li> </ol>"},{"location":"agent/getting-started/introduction/#key-features","title":"Key Features","text":"<ol> <li> <p>Visual Builder</p> <ul> <li>Drag-and-drop interface</li> <li>Visual flow representation</li> <li>Easy configuration</li> </ul> </li> <li> <p>Task Library</p> <ul> <li>Pre-built task types</li> <li>Custom configurations</li> <li>Reusable components</li> </ul> </li> <li> <p>Error Handling</p> <ul> <li>Configurable policies</li> <li>Recovery options</li> <li>Clear error reporting</li> </ul> </li> </ol>"},{"location":"agent/getting-started/quickstart/","title":"Quick Start Guide","text":"<p>This guide will help you create your first workflow agent using Agent Builder. We'll create a simple document review workflow that includes AI analysis and human approval.</p>"},{"location":"agent/getting-started/quickstart/#prerequisites","title":"Prerequisites","text":"<ul> <li>Access to Agent Builder platform</li> <li>Necessary permissions to create and edit workflows</li> <li>Basic understanding of workflow concepts</li> </ul>"},{"location":"agent/getting-started/quickstart/#step-1-create-a-new-agent","title":"Step 1: Create a New Agent","text":"<ol> <li>Navigate to the Agent Builder dashboard</li> <li>Click \"Create New Agent\"</li> <li>Fill in the basic details:     <pre><code>{\n    \"name\": \"Document Review Agent\",\n    \"description\": \"Reviews documents using AI and human approval\"\n}\n</code></pre></li> </ol>"},{"location":"agent/getting-started/quickstart/#step-2-configure-assignment-rules","title":"Step 2: Configure Assignment Rules","text":"<p>Before adding tasks, set up at least one assignment rule:</p> <ol> <li>Click \"Assignment Rules\"</li> <li>Add a new rule:     <pre><code>{\n    \"rule_type\": \"Human Feedback\",\n    \"assignment_type\": \"User\",\n    \"assignee_id\": \"your_user_id\"\n}\n</code></pre></li> </ol>"},{"location":"agent/getting-started/quickstart/#step-3-add-an-ai-task","title":"Step 3: Add an AI Task","text":"<p>Add the first task for AI analysis:</p> <ol> <li>Click \"Add Task\"</li> <li>Choose \"AI Task\"</li> <li>Configure the task:     <pre><code>{\n    \"name\": \"Analyze Document\",\n    \"type\": \"TASK\",\n    \"instructions\": \"Analyze the document content and extract key points\",\n    \"input_parameters\": [\n        {\n            \"name\": \"document_text\",\n            \"type\": \"string\",\n            \"description\": \"Document content to analyze\",\n            \"required\": true,\n            \"source\": \"task_config\"\n        }\n    ],\n    \"expected_output\": [\n        {\n            \"name\": \"analysis_result\",\n            \"type\": \"object\",\n            \"description\": \"Analysis results\",\n            \"properties\": {\n                \"key_points\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"summary\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    ]\n}\n</code></pre></li> </ol>"},{"location":"agent/getting-started/quickstart/#step-4-add-a-human-task","title":"Step 4: Add a Human Task","text":"<p>Add a human approval task:</p> <ol> <li>Click \"Add Task\"</li> <li>Choose \"Human Task\"</li> <li>Configure the task:     <pre><code>{\n    \"name\": \"Review Analysis\",\n    \"type\": \"HUMAN_TASK\",\n    \"instructions\": \"Review the AI analysis and approve or reject\",\n    \"dependencies\": [\"Analyze Document\"]\n}\n</code></pre></li> </ol>"},{"location":"agent/getting-started/quickstart/#step-5-test-your-agent","title":"Step 5: Test Your Agent","text":"<ol> <li> <p>Save Your Agent</p> <ul> <li>Click \"Save\" to store your configuration</li> </ul> </li> <li> <p>Run a Test</p> <ul> <li>Click \"Test Agent\"</li> <li>Input test document content</li> <li>Monitor the execution</li> </ul> </li> <li> <p>Review Results</p> <ul> <li>Check AI analysis output</li> <li>Complete human review task</li> <li>Verify workflow completion</li> </ul> </li> </ol>"},{"location":"agent/getting-started/quickstart/#common-issues-and-solutions","title":"Common Issues and Solutions","text":""},{"location":"agent/getting-started/quickstart/#issue-1-task-creation-errors","title":"Issue 1: Task Creation Errors","text":"<ul> <li>Problem: Cannot create task</li> <li>Solution: Check all required fields are filled</li> </ul>"},{"location":"agent/getting-started/quickstart/#issue-2-assignment-rule-errors","title":"Issue 2: Assignment Rule Errors","text":"<ul> <li>Problem: Assignment rule validation fails</li> <li>Solution: Ensure at least one rule is properly configured</li> </ul>"},{"location":"agent/getting-started/quickstart/#issue-3-dependency-errors","title":"Issue 3: Dependency Errors","text":"<ul> <li>Problem: Tasks not properly connected</li> <li>Solution: Verify task dependencies are correctly set</li> </ul>"},{"location":"agent/getting-started/quickstart/#next-steps","title":"Next Steps","text":"<p>After completing this guide, you can:</p> <ol> <li> <p>Explore More Task Types</p> <ul> <li>Learn about App Tasks</li> <li>Try Coder Tasks</li> </ul> </li> <li> <p>Advanced Configuration</p> <ul> <li>Configure Input Parameters</li> <li>Set up Output Parameters</li> </ul> </li> <li> <p>Best Practices</p> <ul> <li>Review Validation Rules</li> <li>Learn Best Practices</li> </ul> </li> </ol>"},{"location":"agent/getting-started/quickstart/#tips-for-success","title":"Tips for Success","text":"<ol> <li> <p>Start Simple</p> <ul> <li>Begin with basic tasks</li> <li>Add complexity gradually</li> </ul> </li> <li> <p>Test Thoroughly</p> <ul> <li>Test each task individually</li> <li>Verify full workflow execution</li> </ul> </li> <li> <p>Document Your Work</p> <ul> <li>Add clear descriptions</li> <li>Document any special requirements</li> </ul> </li> </ol>"},{"location":"agent/guides/assignment-rules/","title":"Assignment Rules Guide","text":"<p>Assignment rules define how tasks are assigned to users or teams in your workflow. Understanding and configuring these rules correctly is crucial for efficient workflow execution.</p>"},{"location":"agent/guides/assignment-rules/#overview","title":"Overview","text":"<p>Assignment rules determine:</p> <ul> <li>Who can handle tasks</li> <li>How tasks are distributed</li> <li>What happens during exceptions</li> <li>When alerts are needed for scheduled workflows</li> </ul>"},{"location":"agent/guides/assignment-rules/#rule-types","title":"Rule Types","text":"User GuideDeveloper Reference"},{"location":"agent/guides/assignment-rules/#exception-rules","title":"Exception Rules","text":"<p>Exception rules are used when you need someone to handle error cases or special situations in your workflow.</p> <p>How to Configure:</p> <ol> <li>Select \"Exception\" as the rule type</li> <li>Choose either a specific user or team</li> <li>For teams, select \"Round Robin\" distribution method</li> </ol> <p>When to Use:</p> <ul> <li>Error handling</li> <li>Special case processing</li> <li>Technical support tasks</li> </ul>"},{"location":"agent/guides/assignment-rules/#human-scheduler-alert-rules","title":"Human Scheduler Alert Rules","text":"<p>These rules are used for scheduler job workflows to notify users on alerts when workflows run automatically at scheduled intervals.</p> <p>How to Configure:</p> <ol> <li>Select \"Human Scheduler Alert\" as the rule type</li> <li>Choose assignee (user or team)</li> <li>Set distribution method for teams</li> </ol> <p>When to Use:</p> <ul> <li>Automated workflow notifications</li> <li>Scheduled job monitoring</li> <li>Periodic execution alerts</li> </ul> <p>Important: If you enable Scheduler for your workflow, you must provide an assignment for Human Scheduler Alert, otherwise workflow creation/update will not be permitted.</p>"},{"location":"agent/guides/assignment-rules/#exception-rules_1","title":"Exception Rules","text":"<pre><code>{\n  \"rule_type\": \"Exception\",\n  \"assignment_type\": \"User\",\n  \"assignee_id\": \"user_id\"\n}\n</code></pre>"},{"location":"agent/guides/assignment-rules/#human-scheduler-alert-rules_1","title":"Human Scheduler Alert Rules","text":"<pre><code>{\n  \"rule_type\": \"Human Scheduler Alert\",\n  \"assignment_type\": \"Team\",\n  \"assignee_id\": \"team_id\",\n  \"assignment_logic\": \"Round Robin\"\n}\n</code></pre>"},{"location":"agent/guides/assignment-rules/#assignment-types","title":"Assignment Types","text":"User GuideDeveloper Reference"},{"location":"agent/guides/assignment-rules/#assigning-to-a-user","title":"Assigning to a User","text":"<p>When you need a specific person to handle the task:</p> <ol> <li>Select \"User\" assignment</li> <li>Choose the user from the dropdown</li> <li>Save the assignment</li> </ol> <p>Best for:</p> <ul> <li>Tasks needing specific expertise</li> <li>Individual responsibility</li> <li>Direct accountability</li> </ul>"},{"location":"agent/guides/assignment-rules/#assigning-to-a-team","title":"Assigning to a Team","text":"<p>When you want a group to handle tasks:</p> <ol> <li>Select \"Team\" assignment</li> <li>Choose the team</li> <li>Select \"Round Robin\" for fair distribution</li> <li>Save the assignment</li> </ol> <p>Best for:</p> <ul> <li>Shared workload</li> <li>Backup coverage</li> <li>Balanced distribution</li> </ul>"},{"location":"agent/guides/assignment-rules/#user-assignment","title":"User Assignment","text":"<pre><code>{\n  \"assignment_type\": \"User\",\n  \"assignee_id\": \"user_id\"\n}\n</code></pre>"},{"location":"agent/guides/assignment-rules/#team-assignment","title":"Team Assignment","text":"<pre><code>{\n  \"assignment_type\": \"Team\",\n  \"assignee_id\": \"team_id\",\n  \"assignment_logic\": \"Round Robin\"\n}\n</code></pre>"},{"location":"agent/guides/assignment-rules/#configuration-requirements","title":"Configuration Requirements","text":"User GuideDeveloper Reference"},{"location":"agent/guides/assignment-rules/#basic-requirements","title":"Basic Requirements","text":"<ol> <li>At least one assignment rule is needed</li> <li>Select a valid user or team</li> <li>Choose appropriate rule type</li> </ol>"},{"location":"agent/guides/assignment-rules/#for-team-assignments","title":"For Team Assignments","text":"<ul> <li>Select distribution method</li> <li>Ensure team has active members</li> <li>Set backup assignments if needed</li> </ul>"},{"location":"agent/guides/assignment-rules/#for-user-assignments","title":"For User Assignments","text":"<ul> <li>Verify user has correct permissions</li> <li>Consider setting backup assignees</li> <li>Check user availability</li> </ul>"},{"location":"agent/guides/assignment-rules/#for-scheduled-workflows","title":"For Scheduled Workflows","text":"<ul> <li>Must provide Human Scheduler Alert assignment when Scheduler is enabled</li> <li>Select appropriate notification recipients</li> <li>Configure alert frequency</li> </ul>"},{"location":"agent/guides/assignment-rules/#validation-schema","title":"Validation Schema","text":"<pre><code>{\n  \"required\": [\"rule_type\", \"assignment_type\", \"assignee_id\"],\n  \"properties\": {\n    \"rule_type\": {\n      \"enum\": [\"Exception\", \"Human Scheduler Alert\"]\n    },\n    \"assignment_type\": {\n      \"enum\": [\"User\", \"Team\"]\n    },\n    \"assignment_logic\": {\n      \"enum\": [\"Round Robin\", null]\n    }\n  }\n}\n</code></pre>"},{"location":"agent/guides/assignment-rules/#common-use-cases","title":"Common Use Cases","text":"User GuideDeveloper Reference"},{"location":"agent/guides/assignment-rules/#scheduled-alert-notification","title":"Scheduled Alert Notification","text":"<ol> <li>Create Human Scheduler Alert rule</li> <li>Assign to operations team</li> <li>Enable Round Robin distribution</li> <li>Configure with workflow scheduler</li> </ol>"},{"location":"agent/guides/assignment-rules/#error-handling","title":"Error Handling","text":"<ol> <li>Create Exception rule</li> <li>Assign to support team or expert</li> <li>Set notification preferences</li> </ol>"},{"location":"agent/guides/assignment-rules/#scheduler-alert-configuration","title":"Scheduler Alert Configuration","text":"<pre><code>{\n  \"rule_type\": \"Human Scheduler Alert\",\n  \"assignment_type\": \"Team\",\n  \"assignee_id\": \"operations_team\",\n  \"assignment_logic\": \"Round Robin\"\n}\n</code></pre>"},{"location":"agent/guides/assignment-rules/#error-handling-configuration","title":"Error Handling Configuration","text":"<pre><code>{\n  \"rule_type\": \"Exception\",\n  \"assignment_type\": \"User\",\n  \"assignee_id\": \"support_engineer\"\n}\n</code></pre>"},{"location":"agent/guides/assignment-rules/#best-practices","title":"Best Practices","text":"User GuideDeveloper Reference <ol> <li> <p>Keep It Simple</p> <ul> <li>Use clear assignments</li> <li>Set logical rules</li> <li>Document special cases</li> </ul> </li> <li> <p>Plan for Backup</p> <ul> <li>Set alternate assignees</li> <li>Consider team availability</li> <li>Plan for holidays/time off</li> </ul> </li> <li> <p>Scheduler Configurations</p> <ul> <li>Always configure Human Scheduler Alert when using scheduled workflows</li> <li>Assign to active team members who can respond to alerts</li> <li>Set appropriate notification channels</li> </ul> </li> </ol> <ol> <li> <p>Code Organization <pre><code>{\n  \"rules\": [\n    {\n      \"primary\": {...},\n      \"backup\": {...}\n    }\n  ]\n}\n</code></pre></p> </li> <li> <p>Validation</p> </li> <li>Verify IDs before saving</li> <li>Check permissions</li> <li>Test rule combinations</li> <li>Validate scheduler configuration with alert assignments</li> </ol>"},{"location":"agent/guides/best-practices/","title":"Best Practices Guide","text":"<p>This guide outlines recommended practices for creating effective and maintainable workflow agents.</p>"},{"location":"agent/guides/best-practices/#task-design","title":"Task Design","text":""},{"location":"agent/guides/best-practices/#naming-conventions","title":"Naming Conventions","text":"<p>\u2705 Do:</p> <pre><code>{\n    \"name\": \"ValidateCustomerData\",\n    \"description\": \"Validates customer information from input form\"\n}\n</code></pre> <p>\u274c Don't:</p> <pre><code>{\n    \"name\": \"task1\",\n    \"description\": \"validates data\"\n}\n</code></pre>"},{"location":"agent/guides/best-practices/#task-organization","title":"Task Organization","text":"<ol> <li> <p>Logical Grouping</p> <pre><code>graph TD\n    A[Data Input] --&gt; B[Data Validation]\n    B --&gt; C[Data Processing]\n    C --&gt; D[Result Output]</code></pre> </li> <li> <p>Clear Dependencies</p> <ul> <li>Keep dependencies minimal</li> <li>Avoid complex chains</li> <li>Document connection purposes</li> </ul> </li> </ol>"},{"location":"agent/guides/best-practices/#inputoutput-configuration","title":"Input/Output Configuration","text":""},{"location":"agent/guides/best-practices/#input-parameters","title":"Input Parameters","text":"<ol> <li> <p>Clear Naming</p> <pre><code>{\n    \"name\": \"customerEmail\",\n    \"type\": \"STRING\",\n    \"description\": \"Customer's primary email address\"\n}\n</code></pre> </li> <li> <p>Type Selection</p> <ul> <li>Use simplest type possible</li> <li>Consider data flow requirements</li> <li>Document format requirements</li> </ul> </li> <li> <p>Validation Rules <pre><code>{\n    \"name\": \"age\",\n    \"type\": \"INTEGER\",\n    \"description\": \"Customer age in years\",\n    \"required\": true,\n    \"source\": \"task_config\"\n}\n</code></pre></p> </li> </ol>"},{"location":"agent/guides/best-practices/#output-parameters","title":"Output Parameters","text":"<ol> <li> <p>Structured Output</p> <pre><code>{\n    \"name\": \"validationResult\",\n    \"type\": \"OBJECT\",\n    \"properties\": {\n        \"isValid\": \"BOOLEAN\",\n        \"errors\": \"ARRAY\"\n    }\n}\n</code></pre> </li> <li> <p>Error Handling</p> <ul> <li>Include error information</li> <li>Provide status indicators</li> <li>Add validation messages</li> </ul> </li> </ol>"},{"location":"agent/guides/best-practices/#task-specific-best-practices","title":"Task-Specific Best Practices","text":""},{"location":"agent/guides/best-practices/#ai-tasks","title":"AI Tasks","text":"<ol> <li> <p>Clear Instructions</p> <pre><code>{\n    \"instructions\": \"Analyze the customer feedback and categorize the sentiment as POSITIVE, NEGATIVE, or NEUTRAL. Extract key points and improvement suggestions.\",\n    \"expected_output\": {\n        \"sentiment\": \"STRING\",\n        \"keyPoints\": \"ARRAY\",\n        \"suggestions\": \"ARRAY\"\n    }\n}\n</code></pre> </li> <li> <p>Output Structure</p> <ul> <li>Define clear categories</li> <li>Include confidence scores</li> <li>Structure for easy processing</li> </ul> </li> </ol>"},{"location":"agent/guides/best-practices/#human-tasks","title":"Human Tasks","text":"<ol> <li> <p>Clear Decision Points</p> <pre><code>{\n    \"instructions\": \"Review the generated content for accuracy and brand alignment. Choose APPROVE or REJECT and provide feedback.\",\n    \"expected_output\": {\n        \"decision\": \"STRING\",\n        \"feedback\": \"STRING\"\n    }\n}\n</code></pre> </li> <li> <p>Assignment Rules <pre><code>{\n    \"rule_type\": \"Human Feedback\",\n    \"assignment_type\": \"Team\",\n    \"assignment_logic\": \"Round Robin\"\n}\n</code></pre></p> </li> </ol>"},{"location":"agent/guides/best-practices/#app-tasks","title":"App Tasks","text":"<ol> <li> <p>Tool Configuration</p> <pre><code>{\n    \"tool_name\": \"EmailService\",\n    \"provider\": \"SendGrid\",\n    \"input_parameters\": [\n        {\n            \"name\": \"template_id\",\n            \"type\": \"STRING\",\n            \"required\": true\n        }\n    ]\n}\n</code></pre> </li> <li> <p>Error Handling <pre><code>{\n    \"error_policy\": \"RETRY\",\n    \"max_retries\": 3,\n    \"retry_delay\": 60\n}\n</code></pre></p> </li> </ol>"},{"location":"agent/guides/best-practices/#coder-tasks","title":"Coder Tasks","text":"<ol> <li>Code Artifact Management <pre><code>{\n    \"code_artifact_id\": \"12345\",\n    \"input_parameters\": [\n        {\n            \"name\": \"data\",\n            \"type\": \"OBJECT\",\n            \"description\": \"Data structure following schema XYZ\"\n        }\n    ]\n}\n</code></pre></li> </ol>"},{"location":"agent/guides/best-practices/#error-handling","title":"Error Handling","text":""},{"location":"agent/guides/best-practices/#global-error-policies","title":"Global Error Policies","text":"<pre><code>{\n    \"error_policy\": \"RAISE\",\n    \"notification_channels\": [\"email\", \"slack\"],\n    \"error_details\": \"DETAILED\"\n}\n</code></pre>"},{"location":"agent/guides/best-practices/#task-level-error-handling","title":"Task-Level Error Handling","text":"<pre><code>{\n    \"on_error\": {\n        \"action\": \"RETRY\",\n        \"max_attempts\": 3,\n        \"fallback_task\": \"ErrorHandler\"\n    }\n}\n</code></pre>"},{"location":"agent/guides/best-practices/#performance-optimization","title":"Performance Optimization","text":""},{"location":"agent/guides/best-practices/#1-task-efficiency","title":"1. Task Efficiency","text":"<ul> <li>Minimize dependencies</li> <li>Optimize data transfer</li> <li>Use appropriate task types</li> </ul>"},{"location":"agent/guides/best-practices/#2-resource-management","title":"2. Resource Management","text":"<ul> <li>Configure timeouts</li> <li>Set memory limits</li> <li>Monitor execution time</li> </ul>"},{"location":"agent/guides/best-practices/#security-best-practices","title":"Security Best Practices","text":""},{"location":"agent/guides/best-practices/#1-data-handling","title":"1. Data Handling","text":"<ul> <li>Minimize sensitive data</li> <li>Use secure parameters</li> <li>Implement data masking</li> </ul>"},{"location":"agent/guides/best-practices/#2-access-control","title":"2. Access Control","text":"<ul> <li>Proper assignment rules</li> <li>Role-based access</li> <li>Audit logging</li> </ul>"},{"location":"agent/guides/best-practices/#testing-guidelines","title":"Testing Guidelines","text":""},{"location":"agent/guides/best-practices/#1-task-testing","title":"1. Task Testing","text":"<pre><code>{\n    \"test_cases\": [\n        {\n            \"input\": \"sample_input\",\n            \"expected_output\": \"expected_result\"\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/guides/best-practices/#2-workflow-testing","title":"2. Workflow Testing","text":"<ul> <li>Test complete flows</li> <li>Validate error handling</li> <li>Check performance</li> </ul>"},{"location":"agent/guides/best-practices/#maintenance","title":"Maintenance","text":""},{"location":"agent/guides/best-practices/#1-documentation","title":"1. Documentation","text":"<ul> <li>Clear descriptions</li> <li>Updated configurations</li> <li>Change history</li> <li>Usage examples</li> </ul>"},{"location":"agent/guides/best-practices/#2-monitoring","title":"2. Monitoring","text":"<ul> <li>Track execution time</li> <li>Monitor error rates</li> <li>Review usage patterns</li> </ul>"},{"location":"agent/guides/best-practices/#common-pitfalls-to-avoid","title":"Common Pitfalls to Avoid","text":"<ol> <li> <p>Over-complexity</p> <ul> <li>Too many dependencies</li> <li>Unnecessary tasks</li> <li>Complex logic</li> </ul> </li> <li> <p>Poor Error Handling</p> <ul> <li>Missing error cases</li> <li>Unclear error messages</li> <li>No recovery path</li> </ul> </li> <li> <p>Insufficient Validation</p> <ul> <li>Missing input validation</li> <li>Weak type checking</li> <li>Incomplete error checks</li> </ul> </li> </ol>"},{"location":"agent/guides/validation-rules/","title":"Validation Rules","text":""},{"location":"agent/guides/validation-rules/#overview","title":"Overview","text":"<p>This guide covers all validation rules that must be satisfied when creating or updating an agent. These rules ensure the integrity and proper functioning of your workflow.</p>"},{"location":"agent/guides/validation-rules/#general-workflow-validation","title":"General Workflow Validation","text":""},{"location":"agent/guides/validation-rules/#assignment-rules","title":"Assignment Rules","text":"<ol> <li>Minimum Requirement<ul> <li>At least one assignment rule must exist <pre><code>{\n    \"rule_type\": \"Human Feedback|Exception\",\n    \"assignment_type\": \"User|Team\",\n    \"assignee_id\": \"valid_id\"\n}\n</code></pre></li> </ul> </li> </ol>"},{"location":"agent/guides/validation-rules/#task-dependencies","title":"Task Dependencies","text":"<ol> <li> <p>Cyclic Dependencies</p> <ul> <li>No circular dependencies allowed between tasks</li> </ul> <pre><code>graph TD\n    A[Task A] --&gt; B[Task B]\n    B --&gt; C[Task C]\n    C -.- x[\u274c] --&gt; A</code></pre> </li> <li> <p>Valid Connections</p> <ul> <li>Tasks must be properly connected</li> <li>Output parameters must match input requirements</li> </ul> </li> </ol>"},{"location":"agent/guides/validation-rules/#task-specific-validation","title":"Task-Specific Validation","text":""},{"location":"agent/guides/validation-rules/#1-ai-task-validation","title":"1. AI Task Validation","text":"<pre><code>{\n    \"name\": \"required|string\",\n    \"instructions\": \"required|string\",\n    \"input_parameters\": \"required|array\",\n    \"expected_output\": \"required|array\"\n}\n</code></pre>"},{"location":"agent/guides/validation-rules/#2-human-task-validation","title":"2. Human Task Validation","text":"<pre><code>{\n    \"name\": \"required|string\",\n    \"instructions\": \"required|string\",\n    \"error_policy\": \"optional|RAISE|IGNORE|RETRY\"\n}\n</code></pre>"},{"location":"agent/guides/validation-rules/#3-app-task-validation","title":"3. App Task Validation","text":"<pre><code>{\n    \"name\": \"required|string\",\n    \"instructions\": \"required|string\",\n    \"provider\": \"required|string\",\n    \"tool_name\": \"required|string\",\n    \"tool_id\": \"required|integer\",\n    \"input_parameters\": \"required|array\",\n    \"expected_output\": \"required|array\"\n}\n</code></pre>"},{"location":"agent/guides/validation-rules/#4-coder-task-validation","title":"4. Coder Task Validation","text":"<pre><code>{\n    \"name\": \"required|string\",\n    \"instructions\": \"required|string\",\n    \"code_artifact_id\": \"required|integer\",\n    \"input_parameters\": \"required|array\",\n    \"expected_output\": \"required|array\"\n}\n</code></pre>"},{"location":"agent/guides/validation-rules/#parameter-validation","title":"Parameter Validation","text":""},{"location":"agent/guides/validation-rules/#input-parameters","title":"Input Parameters","text":""},{"location":"agent/guides/validation-rules/#1-basic-types","title":"1. Basic Types","text":"<pre><code>{\n    \"name\": \"required|string\",\n    \"type\": \"required|STRING|INTEGER|FLOAT|BOOLEAN\",\n    \"description\": \"required|string\",\n    \"required\": \"boolean\",\n    \"source\": \"required|task_config|system_generated|human_input\",\n    \"value\": \"conditional|based_on_type\"\n}\n</code></pre>"},{"location":"agent/guides/validation-rules/#2-array-type","title":"2. Array Type","text":"<pre><code>{\n    \"type\": \"ARRAY\",\n    \"items\": {\n        \"type\": \"required|STRING|INTEGER|FLOAT|BOOLEAN|ARRAY|OBJECT\",\n        \"items\": \"required_for_nested_array\",\n        \"properties\": \"required_for_object\"\n    }\n}\n</code></pre>"},{"location":"agent/guides/validation-rules/#3-object-type","title":"3. Object Type","text":"<pre><code>{\n    \"type\": \"OBJECT\",\n    \"properties\": [\n        {\n            \"name\": \"required|string\",\n            \"type\": \"required|STRING|INTEGER|FLOAT|BOOLEAN\",\n            \"description\": \"required|string\",\n            \"required\": \"boolean\"\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/guides/validation-rules/#output-parameters","title":"Output Parameters","text":""},{"location":"agent/guides/validation-rules/#1-basic-types_1","title":"1. Basic Types","text":"<pre><code>{\n    \"name\": \"required|string\",\n    \"type\": \"required|BOOLEAN|INTEGER|FLOAT|STRING|DATETIME\",\n    \"description\": \"required|string\"\n}\n</code></pre>"},{"location":"agent/guides/validation-rules/#2-file-types","title":"2. File Types","text":"<pre><code>{\n    \"type\": \"required|TEXT|MARKDOWN|HTML|CODE|PDF|CSV|XML|FILE|PPT\",\n    \"description\": \"required|string\"\n}\n</code></pre>"},{"location":"agent/guides/validation-rules/#data-source-validation","title":"Data Source Validation","text":""},{"location":"agent/guides/validation-rules/#1-memory-data-source","title":"1. Memory Data Source","text":"<ul> <li>Default data source</li> <li>No additional validation required</li> </ul>"},{"location":"agent/guides/validation-rules/#2-data-lake-source","title":"2. Data Lake Source","text":"<pre><code>{\n    \"data_source\": \"DATA_LAKE\",\n    \"data_lake_id\": \"required|string\",\n    \"type\": \"must_be_ARRAY\"\n}\n</code></pre>"},{"location":"agent/guides/validation-rules/#type-specific-validation","title":"Type-Specific Validation","text":""},{"location":"agent/guides/validation-rules/#1-string-values","title":"1. String Values","text":"<ul> <li>Must be valid string</li> <li>Length constraints if specified</li> </ul>"},{"location":"agent/guides/validation-rules/#2-numeric-values","title":"2. Numeric Values","text":"<pre><code># Integer\nif type == \"INTEGER\":\n    must be valid integer or convertible string\n\n# Float\nif type == \"FLOAT\":\n    must be valid float or convertible string/integer\n</code></pre>"},{"location":"agent/guides/validation-rules/#3-boolean-values","title":"3. Boolean Values","text":"<ul> <li>Must be true/false</li> <li>String \"true\"/\"false\" accepted</li> </ul>"},{"location":"agent/guides/validation-rules/#4-array-values","title":"4. Array Values","text":"<ul> <li>Must be valid JSON array</li> <li>Items must match specified type</li> <li>Nested validation for complex types</li> </ul>"},{"location":"agent/guides/validation-rules/#5-object-values","title":"5. Object Values","text":"<ul> <li>Must be valid JSON object</li> <li>Required properties must exist</li> <li>Property types must match specifications</li> </ul>"},{"location":"agent/guides/validation-rules/#common-validation-patterns","title":"Common Validation Patterns","text":""},{"location":"agent/guides/validation-rules/#1-required-fields","title":"1. Required Fields","text":"<pre><code>{\n    \"required_field\": \"value is mandatory\",\n    \"optional_field\": \"can be null\"\n}\n</code></pre>"},{"location":"agent/guides/validation-rules/#2-conditional-requirements","title":"2. Conditional Requirements","text":"<pre><code>{\n    \"type\": \"ARRAY\",\n    \"items\": \"required when type is ARRAY\",\n    \"properties\": \"not allowed when type is ARRAY\"\n}\n</code></pre>"},{"location":"agent/guides/validation-rules/#3-type-compatibility","title":"3. Type Compatibility","text":"<pre><code>{\n    \"output\": \"type STRING\",\n    \"connected_input\": \"must accept STRING\"\n}\n</code></pre>"},{"location":"agent/guides/validation-rules/#error-messages","title":"Error Messages","text":"<p>Common validation errors and their meanings:</p> Error Meaning Solution Missing Required Field Mandatory field not provided Add required field Invalid Type Value type mismatch Correct value type Cyclic Dependency Circular task reference Restructure workflow Invalid Assignment Missing or invalid assignment rule Add valid assignment"},{"location":"agent/guides/validation-rules/#best-practices","title":"Best Practices","text":"<ol> <li> <p>Pre-validation</p> <ul> <li>Validate input data before submission</li> <li>Check type compatibility</li> <li>Verify required fields</li> </ul> </li> <li> <p>Error Handling</p> <ul> <li>Handle validation errors gracefully</li> <li>Provide clear error messages</li> <li>Log validation failures</li> </ul> </li> <li> <p>Testing</p> <ul> <li>Test edge cases</li> <li>Verify all required fields</li> <li>Check type conversions</li> </ul> </li> </ol>"},{"location":"agent/knowledge/base/","title":"\ud83e\udde0 Knowledge Agent Documentation","text":""},{"location":"agent/knowledge/base/#knowledge-agents-and-workflows","title":"Knowledge Agents and Workflows","text":"<p>Knowledge Agents serve as repositories of specialized knowledge that workflow agents can leverage to complete tasks. The workflow agent can access and utilize the <code>Coder</code> and <code>Rule</code> artifacts to:</p> <ul> <li>Execute calculations and transformations (Coder artifacts)</li> <li>Apply business rules and validations (Rule artifacts)</li> <li>Make decisions based on predefined criteria</li> <li>Ensure consistency across automated processes</li> </ul> <p>This integration allows for more sophisticated automation while maintaining separation between process flow and domain knowledge.</p>"},{"location":"agent/knowledge/base/#overview","title":"Overview","text":"<p>The Knowledge Agent feature in Gaife allows you to create specialized knowledge bases for various automation tasks. This documentation covers how to access, configure, and use Knowledge Agents in the Gaife platform.</p>"},{"location":"agent/knowledge/base/#creating-a-knowledge-base","title":"Creating a Knowledge Base","text":"<ol> <li>Navigate to <code>https://beta.gaife.com/organizations/[your-org-id]/knowledge/bases</code></li> <li>Click the <code>+ Build New Knowledge</code> button in the upper right corner</li> <li>Fill in the required information:<ul> <li>Knowledge Name: A descriptive name for your knowledge base</li> <li>Description: Brief explanation of the knowledge base's purpose</li> </ul> </li> <li>Click <code>Create</code> to generate your new knowledge base</li> <li>Your new knowledge base will appear in the knowledge bases list</li> </ol>"},{"location":"agent/knowledge/base/#accessing-knowledge-agents","title":"Accessing Knowledge Agents","text":"<ol> <li>Navigate to <code>https://beta.gaife.com/organizations/[your-org-id]/knowledge/bases</code></li> <li>From the Knowledge Base listing, locate and click on the desired knowledge agent (e.g., \"Invoice Generation\")</li> <li>This will take you to the detailed view at <code>https://beta.gaife.com/organizations/[your-org-id]/knowledge/bases/[id]</code></li> </ol>"},{"location":"agent/knowledge/base/#interface-layout","title":"Interface Layout","text":"<p>The Knowledge Agent interface consists of:</p> <ul> <li>Header Section: Displays the title of the knowledge agent with its description</li> <li>Navigation Tabs: Code, Rules, Prompts, and Data Relations</li> <li>Search Bar: Allows searching for specific artifacts within the knowledge base</li> <li>Filter Status: Option to filter items by their status</li> <li>Create Button: Used to add new artifacts to the knowledge base</li> </ul>"},{"location":"agent/knowledge/base/#artifacts-table","title":"Artifacts Table","text":"<p>The main table displays artifacts with the following columns:</p> Column Description Type The category of the artifact (e.g., Coder) Artifact Name Name of the artifact with an identifier Details View details of the artifact (eye icon) Status Current status of the artifact (e.g., DRAFT, PUBLISH) Created On Date when the artifact was created Last Updated Date when the artifact was last modified"},{"location":"agent/knowledge/base/#working-with-artifacts","title":"Working with Artifacts","text":""},{"location":"agent/knowledge/base/#viewing-existing-artifacts","title":"Viewing Existing Artifacts","text":"<p>The knowledge base will display all artifacts associated with it in the main table. Each artifact includes its type, name, status, and relevant dates.</p>"},{"location":"agent/knowledge/base/#creating-new-artifacts","title":"Creating New Artifacts","text":"<p>To create a new artifact:</p> <ol> <li>Click the <code>+ Create</code> button in the upper right corner</li> <li>A \"Create Artifact\" popup will appear</li> <li>Enter the artifact name in the \"Artifact Name\" field</li> <li>Select one of the available artifact types:<ul> <li>Coder: Create and manage code-related knowledge</li> <li>Rule: Define business rules and logic</li> <li>Prompt: Design and store prompts (Coming Soon)</li> <li>Data Relation: Define data schemas and relationships (Coming Soon)</li> </ul> </li> <li>Click the <code>Create Artifact</code> button at the bottom of the popup to finish</li> </ol> <p>Note: Some artifact types may be marked as \"Coming Soon\" and not yet available for use.</p>"},{"location":"agent/knowledge/base/#available-tabs","title":"Available Tabs","text":""},{"location":"agent/knowledge/base/#code-tab","title":"\ud83d\udcbb Code Tab","text":"<p>The Code tab displays coding artifacts that handle calculations and logic for your automation. These components handle the computational aspects of your process. Create \"Coder\" type artifacts to add code-related knowledge to your knowledge base.</p>"},{"location":"agent/knowledge/base/#rules-tab","title":"\ud83d\udccf Rules Tab","text":"<p>The Rules tab contains business rules and constraints that govern your process. These rules ensure compliance with business requirements and validation standards. Add \"Rule\" type artifacts to define the business logic for your knowledge agent.</p>"},{"location":"agent/knowledge/base/#prompts-tab-coming-soon","title":"\ud83d\udcac Prompts Tab (Coming Soon)","text":"<p>The Prompts tab includes templates and AI prompts used to guide your automated processes. These prompts help structure AI interactions for consistent results. This feature will allow you to design and store prompts for AI interactions.</p>"},{"location":"agent/knowledge/base/#data-relations-tab-coming-soon","title":"\ud83d\udd04 Data Relations Tab (Coming Soon)","text":"<p>The Data Relations tab shows connections between different data sources and how they interact with your process. This includes mappings to databases or external systems. This feature will allow you to define data schemas and relationships.</p>"},{"location":"agent/knowledge/base/#managing-artifacts","title":"Managing Artifacts","text":""},{"location":"agent/knowledge/base/#publishing-an-artifact","title":"Publishing an Artifact","text":"<p>To publish an artifact:</p> <ol> <li>Select the artifact from the list</li> <li>Click the <code>PUBLISH</code> button in the Status column</li> <li>Confirm the publishing action</li> </ol>"},{"location":"agent/knowledge/base/#viewing-artifact-details","title":"Viewing Artifact Details","text":"<p>To view details of an artifact:</p> <ol> <li>Click the eye icon in the Details column</li> <li>A detailed view will display the artifact's configuration and content</li> </ol>"},{"location":"agent/knowledge/base/#best-practices","title":"Best Practices","text":"<ol> <li>Regular Updates: Keep artifacts updated to reflect current business requirements</li> <li>Clear Naming: Use descriptive names for artifacts to ensure easy identification</li> <li>Status Management: Properly manage the status of artifacts to control what is active</li> <li>Documentation: Add detailed descriptions to artifacts for team knowledge sharing</li> </ol>"},{"location":"agent/knowledge/base/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues with your Knowledge Agent:</p> <ol> <li>Check the Status column to ensure artifacts are published</li> <li>Review the Last Updated date to verify recency</li> <li>Ensure proper connections in the Data Relations tab</li> <li>Consult the development team if issues persist</li> </ol>"},{"location":"agent/knowledge/base/#example-invoice-generation-knowledge-agent","title":"Example: Invoice Generation Knowledge Agent","text":"<p>As an example, an \"Invoice Generation\" knowledge agent might include:</p> <ul> <li>Code artifacts: Invoice calculation formulas</li> <li>Rules: Validation rules for invoice fields</li> <li>Prompts: Templates for generating invoice descriptions</li> <li>Data Relations: Connections to customer and product databases</li> </ul> <p>This knowledge agent would automate the creation of invoices according to established business rules while maintaining consistency and accuracy.</p>"},{"location":"agent/knowledge/base/#managing-knowledge-bases","title":"Managing Knowledge Bases","text":""},{"location":"agent/knowledge/base/#editing-a-knowledge-base","title":"Editing a Knowledge Base","text":"<p>To edit an existing knowledge base:</p> <ol> <li>From the main knowledge bases page, locate the knowledge base you wish to edit</li> <li>Click the pencil icon in the Actions column</li> <li>Update the Name and/or Description as needed</li> <li>Save your changes</li> </ol>"},{"location":"agent/knowledge/base/#deleting-a-knowledge-base","title":"Deleting a Knowledge Base","text":"<p>To delete a knowledge base:</p> <ol> <li>From the main knowledge bases page, locate the knowledge base you wish to delete</li> <li>Click the delete (trash) icon in the Actions column</li> <li>Confirm the deletion when prompted</li> </ol> <p>Warning: Deletion is permanent and will remove all associated artifacts</p>"},{"location":"agent/knowledge/base/#related-resources","title":"\ud83d\udcda Related Resources","text":"<ul> <li>Coder Artifact</li> </ul>"},{"location":"agent/knowledge/coder-artifact/","title":"\ud83d\udcbb Coder Artifact Documentation","text":""},{"location":"agent/knowledge/coder-artifact/#overview","title":"Overview","text":"<p>The Coder Artifact in Gaife allows you to create custom code functions that process inputs and generate structured outputs. These artifacts are used in knowledge agents to handle the computational logic of your automation workflows.</p>"},{"location":"agent/knowledge/coder-artifact/#interface-layout","title":"Interface Layout","text":"<p>The Coder Artifact interface consists of:</p> <ul> <li>Header Section: Displays the artifact name with edit option</li> <li>Action Buttons: Update and Publish buttons</li> <li>Code Generation Assistant: AI-powered assistant to help generate code</li> <li>Generated Code: Python editor with syntax highlighting</li> </ul>"},{"location":"agent/knowledge/coder-artifact/#creating-a-coder-artifact","title":"Creating a Coder Artifact","text":""},{"location":"agent/knowledge/coder-artifact/#getting-started","title":"Getting Started","text":"<p>When creating a new Coder Artifact, you'll see the following interface elements:</p> <ol> <li> <p>Code Generation Assistant:</p> <ul> <li>Powered by GAIFE AI</li> <li>Provides a conversational interface to describe what you want to build</li> <li>Options to define input parameters, expected output, and add rules</li> </ul> </li> <li> <p>Supporting Files Section:</p> <ul> <li>Rules (.txt, .json, .yaml)</li> <li>Sample data (.csv, .json)</li> </ul> </li> <li> <p>Input &amp; Output Configuration:</p> <ul> <li>Define the structure and format of your input parameters</li> <li>Specify the expected output format</li> </ul> </li> </ol>"},{"location":"agent/knowledge/coder-artifact/#writing-coder-functions","title":"Writing Coder Functions","text":""},{"location":"agent/knowledge/coder-artifact/#function-structure","title":"Function Structure","text":"<p>Every Coder Artifact must follow this structure:</p> <ol> <li> <p>Main Function:</p> <ul> <li>Must accept an <code>arguments</code> parameter that contains all input data</li> <li>Process the input according to business logic</li> <li>Return structured output data</li> </ul> </li> <li> <p>Required Boilerplate Code:     <pre><code> # Calculate and store the result\n result = {}\n # Call the function for execution here\n output = [your_function_name](arguments)\n # Store the output in result dictionary\n result['output'] = output\n</code></pre></p> </li> </ol>"},{"location":"agent/knowledge/coder-artifact/#example-implementation","title":"Example Implementation","text":"<p>Here's an example of a complete Coder Artifact for invoice calculation:</p> <pre><code>from datetime import datetime\n\ndef calculate_amount(arguments):\n    try:\n        # Extract items_to_be_billed from the arguments dictionary\n        items = arguments.get('items_to_be_billed', [])\n\n        # If items is a string, attempt to evaluate it into a list\n        if isinstance(items, str):\n            import ast\n            items = ast.literal_eval(items)\n\n        # Ensure items is a list\n        if not isinstance(items, list):\n            items = [items]\n\n        # Initialize totals\n        total_price = 0.0\n\n        # Process each item in the list\n        for item in items:\n            # Extract item attributes, handle default values and type conversion\n            item_price = float(item.get('item_price', '0'))\n            item_quantity = int(item.get('item_quantity', '1'))  # Default to 1 if not provided\n\n            # Calculate item subtotal\n            item_subtotal = item_price * item_quantity\n            total_price += item_subtotal\n\n        # Calculate taxes and total amounts\n        total_state_tax = total_price * 0.06  # 6% state GST\n        total_central_tax = total_price * 0.06  # 6% central GST\n        total_tax = total_state_tax + total_central_tax\n        total_amount = total_price\n        total_amount_with_gst = total_price + total_tax  # 12% overall GST\n\n        # Get the current date\n        current_date = datetime.now().strftime('%d-%m-%Y')\n\n        # Construct the output dictionary according to expected output format\n        return {\n            'calculation_amount': {\n                'total_tax': f'{total_tax:.2f}',\n                'current_date': current_date,\n                'total_amount': f'{total_amount:.2f}',\n                'total_state_tax': f'{total_state_tax:.2f}',\n                'total_central_tax': f'{total_central_tax:.2f}',\n                'total_amount_with_gst': f'{total_amount_with_gst:.2f}',\n            }\n        }\n\n    except Exception as e:\n        raise e\n\n\n# Calculate and store the result\nresult = {}\n# Call the function for execution here\noutput = calculate_amount(arguments)\n# Store the output in result dictionary\nresult['output'] = output\n</code></pre>"},{"location":"agent/knowledge/coder-artifact/#key-components","title":"Key Components","text":""},{"location":"agent/knowledge/coder-artifact/#function-parameters","title":"Function Parameters","text":"<p>Every Coder Artifact function must accept a single parameter called <code>arguments</code>, which is a dictionary containing all input data passed to the function.</p>"},{"location":"agent/knowledge/coder-artifact/#input-handling","title":"Input Handling","text":"<p>Proper input handling is essential:</p> <ul> <li>Extract values using <code>arguments.get('key', default_value)</code></li> <li>Include type conversion for input values (e.g., <code>float()</code>, <code>int()</code>)</li> <li>Handle potential missing or malformed data</li> <li>Implement error handling with try/except blocks</li> </ul>"},{"location":"agent/knowledge/coder-artifact/#processing-logic","title":"Processing Logic","text":"<p>Implement your business logic in the middle section of your function:</p> <ul> <li>Perform calculations</li> <li>Apply business rules</li> <li>Format data as needed</li> </ul>"},{"location":"agent/knowledge/coder-artifact/#output-structure","title":"Output Structure","text":"<p>Return a structured dictionary that matches your expected output format:</p> <ul> <li>Nest data in appropriate hierarchies</li> <li>Format values consistently</li> <li>Include all required fields</li> </ul>"},{"location":"agent/knowledge/coder-artifact/#boilerplate-code","title":"Boilerplate Code","text":"<p>Always include the required boilerplate code at the end to properly store and return results:</p> <pre><code># Calculate and store the result\nresult = {}\n# Call the function for execution here\noutput = [your_function_name](arguments)\n# Store the output in result dictionary\nresult['output'] = output\n</code></pre>"},{"location":"agent/knowledge/coder-artifact/#naming-conventions","title":"\ud83c\udff7\ufe0f Naming Conventions","text":"<p>Following consistent naming conventions ensures readability, maintainability, and consistency across all Gaife automation workflows.</p>"},{"location":"agent/knowledge/coder-artifact/#arguments-dictionary-naming-conventions","title":"Arguments Dictionary Naming Conventions","text":""},{"location":"agent/knowledge/coder-artifact/#general-rules","title":"General Rules","text":"<ol> <li>Parameter Name: Always use <code>arguments</code> (lowercase) as the parameter name for your main function</li> <li>Key Formatting:<ul> <li>Use snake_case (lowercase with underscores)</li> <li>Use descriptive names that clearly indicate purpose</li> <li>Avoid abbreviations unless widely recognized</li> <li>Keep names concise yet meaningful</li> </ul> </li> </ol>"},{"location":"agent/knowledge/coder-artifact/#examples-of-well-formatted-argument-keys","title":"Examples of Well-Formatted Argument Keys","text":"<p>\u2705 Recommended:</p> <ul> <li><code>customer_id</code></li> <li><code>invoice_date</code></li> <li><code>items_to_be_billed</code></li> <li><code>tax_rate</code></li> <li><code>shipping_address</code></li> <li><code>payment_method</code></li> </ul> <p>\u274c Avoid:</p> <ul> <li><code>CustomerID</code> (not snake_case)</li> <li><code>inv_dt</code> (unclear abbreviation)</li> <li><code>i</code> (not descriptive)</li> <li><code>calculation amount</code> (spaces instead of underscores)</li> </ul>"},{"location":"agent/knowledge/coder-artifact/#nested-arguments","title":"Nested Arguments","text":"<p>For nested dictionaries within arguments:</p> <pre><code># Accessing nested arguments example\ncustomer = arguments.get('customer', {})\naddress = customer.get('shipping_address', {})\npostal_code = address.get('postal_code', '')\n</code></pre>"},{"location":"agent/knowledge/coder-artifact/#output-dictionary-naming-conventions","title":"Output Dictionary Naming Conventions","text":""},{"location":"agent/knowledge/coder-artifact/#general-rules_1","title":"General Rules","text":"<ol> <li> <p>Result Structure: Always use the following structure:</p> <pre><code>result = {}\noutput = your_function_name(arguments)\nresult['output'] = output\n</code></pre> </li> <li> <p>Primary Output Keys:</p> <ul> <li>Use snake_case for all keys (lowercase with underscores)</li> <li>Format values consistently based on their type</li> <li>For categories or sections, use descriptive names</li> </ul> </li> <li> <p>Formatting Values:</p> <ul> <li>Format numeric values consistently (e.g., <code>f'{value:.2f}'</code> for currency)</li> <li>Use ISO formats for dates when possible</li> <li>Convert all values to appropriate string formats for API compatibility</li> </ul> </li> </ol>"},{"location":"agent/knowledge/coder-artifact/#examples-of-well-formatted-output-keys","title":"Examples of Well-Formatted Output Keys","text":"<p>\u2705 Recommended Output Structure:</p> <pre><code>return {\n    'calculation_results': {\n        'total_tax': f'{total_tax:.2f}',\n        'current_date': current_date,\n        'total_amount': f'{total_amount:.2f}',\n        'total_state_tax': f'{total_state_tax:.2f}',\n        'total_central_tax': f'{total_central_tax:.2f}',\n        'total_amount_with_gst': f'{total_amount_with_gst:.2f}'\n    }\n}\n</code></pre> <p>\u274c Avoid:</p> <pre><code>return {\n    'calculation amount': {  # spaces instead of underscores\n        'TotalTax': total_tax,  # not snake_case\n        'date': current_date,  # inconsistent naming (prefer current_date)\n        'amt': total_amount,  # unclear abbreviation\n        'Total_amount_with_gst': f'{total_amount_with_gst:.2f}'  # mixed case\n    }\n}\n</code></pre>"},{"location":"agent/knowledge/coder-artifact/#data-type-conventions","title":"Data Type Conventions","text":""},{"location":"agent/knowledge/coder-artifact/#numeric-values","title":"Numeric Values","text":"<ul> <li>Format currency values with two decimal places: <code>f'{value:.2f}'</code></li> <li>Use integers for counts: <code>item_count = int(value)</code></li> <li>Format percentages consistently: <code>f'{value:.1f}%'</code> or as decimal values</li> </ul>"},{"location":"agent/knowledge/coder-artifact/#date-and-time-values","title":"Date and Time Values","text":"<ul> <li>Use ISO format (YYYY-MM-DD) for date storage: <code>2023-04-15</code></li> <li>For display formatting, use consistent patterns: <code>'%d-%m-%Y'</code></li> <li>Include timezone information for time-sensitive operations</li> </ul>"},{"location":"agent/knowledge/coder-artifact/#boolean-values","title":"Boolean Values","text":"<ul> <li>Use clear boolean names: <code>is_taxable</code>, <code>has_discount</code>, <code>requires_shipping</code></li> </ul>"},{"location":"agent/knowledge/coder-artifact/#testing-and-publishing","title":"\ud83d\ude80 Testing and Publishing","text":""},{"location":"agent/knowledge/coder-artifact/#testing-your-code","title":"Testing Your Code","text":"<ol> <li>Use the \"Dry Run\" button to test your code with sample inputs</li> <li>Check the output to ensure it matches the expected format</li> <li>Debug any issues before publishing</li> </ol>"},{"location":"agent/knowledge/coder-artifact/#publishing","title":"Publishing","text":"<ol> <li>Click the \"Publish\" button to make your artifact available for use</li> <li>Published artifacts can be used by other components in your knowledge agent</li> </ol>"},{"location":"agent/knowledge/coder-artifact/#best-practices","title":"\ud83d\udca1 Best Practices","text":"<ol> <li>Error Handling: Always implement robust error handling with try/except blocks</li> <li>Input Validation: Validate all input data before processing</li> <li>Documentation: Add detailed comments to explain the logic and data flow</li> <li>Type Conversion: Convert input data to appropriate types (string, int, float)</li> <li>Default Values: Provide sensible default values for optional parameters</li> <li>Code Organization: Structure your code logically with clear sections</li> <li>Naming Consistency: Use the same name for the same concept throughout your code</li> <li>Clarity: Choose names that reveal intent</li> <li>Simplicity: Keep names simple but descriptive</li> <li>Hierarchy: Structure output dictionaries logically with clear parent-child relationships</li> </ol>"},{"location":"agent/knowledge/coder-artifact/#integration-with-workflow-agent","title":"\ud83d\udd04 Integration with Workflow Agent","text":"<p>The Coder Artifact is a key component in the Workflow Agent ecosystem:</p> <ol> <li>Workflow Integration: Your published Coder Artifact will be available as a processing step within workflow agents</li> <li>Data Flow:<ul> <li>Workflow agents pass input parameters to your Coder function</li> <li>The function processes these parameters according to your logic</li> <li>Output parameters are returned to the workflow for further processing or final delivery</li> </ul> </li> <li>Complex Processing: Workflow agents can chain multiple Coder Artifacts together to handle complex calculations    and data transformations</li> <li>Automation Pipeline: Acts as the computational engine for automation workflows, handling everything from simple    calculations to complex business logic</li> </ol>"},{"location":"agent/knowledge/coder-artifact/#use-cases-in-workflows","title":"Use Cases in Workflows","text":"<ul> <li>Financial Calculations: Process invoice amounts, taxes, discounts as shown in the example</li> <li>Data Transformation: Convert data between formats or structures</li> <li>Decision Logic: Implement complex business rules that determine workflow paths</li> <li>API Integration: Pre-process data before sending to external systems</li> <li>Analytics: Perform statistical analysis or data aggregation within workflows</li> </ul>"},{"location":"agent/parameters/input-parameters/","title":"Input Parameters","text":"<p>Input parameters define the data that your tasks will process. Understanding how to configure them correctly is crucial for building effective workflows.</p>"},{"location":"agent/parameters/input-parameters/#parameter-types","title":"Parameter Types","text":"Basic TypesComplex TypesSpecial Types Type Description Example STRING Text data \"Hello World\" INTEGER Whole numbers 42 FLOAT Decimal numbers 3.14 BOOLEAN True/false values true Type Description Example Restrictions ARRAY List of items <code>[\"item1\", \"item2\"]</code> Maximum 2D arrays allowed OBJECT Structured data <code>{\"name\": \"John\"}</code> Properties must be basic types ENUM Limited choices <code>\"APPROVED\"</code> Fixed set of values Type Description Use Case OUTPUT_ARTIFACT Reference to task output Inter-task data flow KNOWLEDGE_ARTIFACT Knowledge base reference Accessing stored knowledge"},{"location":"agent/parameters/input-parameters/#complex-type-configuration","title":"Complex Type Configuration","text":"User GuideDeveloper Reference"},{"location":"agent/parameters/input-parameters/#array-parameters","title":"Array Parameters","text":"<p>\u26a0\ufe0f Important Rules:</p> <ul> <li>Maximum 2D arrays allowed</li> <li>Inner array elements can be basic types or objects</li> <li>No 3D or deeper arrays</li> </ul>"},{"location":"agent/parameters/input-parameters/#object-parameters","title":"Object Parameters","text":"<p>\u26a0\ufe0f Important Rules:</p> <ul> <li>Properties must use only:</li> <li>STRING</li> <li>INTEGER</li> <li>FLOAT</li> <li>BOOLEAN</li> <li>No nested objects allowed</li> <li>Each property needs name, description, type, and required fields</li> </ul>"},{"location":"agent/parameters/input-parameters/#array-structure","title":"Array Structure","text":"<pre><code>// 1D Array\n{\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"string\",  // Any basic type\n    \"items\": null,\n    \"properties\": null\n  },\n  \"properties\": null\n}\n\n// 2D Array (Maximum depth)\n{\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"string\",  // Any basic type\n      \"items\": null,\n      \"properties\": null\n    },\n    \"properties\": null\n  },\n  \"properties\": null\n}\n\n// Array of Objects\n{\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"items\": null,\n    \"properties\": [\n      {\n        \"name\": \"field\",\n        \"description\": \"Description\",\n        \"required\": false,\n        \"type\": \"string\"  // Must be basic type\n      }\n    ]\n  },\n  \"properties\": null\n}\n</code></pre>"},{"location":"agent/parameters/input-parameters/#object-structure","title":"Object Structure","text":"<pre><code>{\n  \"type\": \"object\",\n  \"items\": null,\n  \"properties\": [\n    {\n      \"name\": \"fieldName\",\n      \"description\": \"Field description\",\n      \"required\": false,\n      \"type\": \"string\"  // Must be one of: \"string\", \"integer\", \"float\", \"boolean\"\n    }\n  ]\n}\n</code></pre>"},{"location":"agent/parameters/input-parameters/#parameter-sources","title":"Parameter Sources","text":"User GuideDeveloper Reference <pre><code>// Task Config\n{\n  \"source\": \"task_config\",\n  \"value\": \"configured_value\"\n}\n\n// System Generated\n{\n  \"source\": \"system_generated\"\n}\n\n// Human Input\n{\n  \"source\": \"human_input\"\n}\n</code></pre>"},{"location":"agent/parameters/input-parameters/#available-sources","title":"Available Sources","text":"<ol> <li> <p>Task Config</p> <ul> <li>Set during task setup</li> <li>Fixed values</li> <li>Template values</li> </ul> </li> <li> <p>System Generated</p> <ul> <li>Created during execution</li> <li>Dynamic values</li> <li>No manual input needed</li> </ul> </li> <li> <p>Human Input</p> <ul> <li>Provided during workflow</li> <li>User interaction required</li> <li>Interactive forms</li> </ul> </li> </ol>"},{"location":"agent/parameters/input-parameters/#data-sources","title":"Data Sources","text":"User GuideDeveloper Reference <pre><code>// Memory Storage\n{\n  \"data_source\": \"MEMORY\"\n}\n\n// Data Lake Storage\n{\n  \"data_source\": \"DATA_LAKE\",\n  \"data_lake_id\": \"12345\"\n}\n</code></pre>"},{"location":"agent/parameters/input-parameters/#memory-storage","title":"Memory Storage","text":"<ul> <li>Default storage method</li> <li>For regular data volumes</li> <li>No special configuration needed</li> </ul>"},{"location":"agent/parameters/input-parameters/#data-lake-storage","title":"Data Lake Storage","text":"<ul> <li>For large datasets</li> <li>Persistent storage</li> <li>Requires data_lake_id</li> </ul>"},{"location":"agent/parameters/input-parameters/#configuration-examples","title":"Configuration Examples","text":"Basic ExamplesComplex Examples"},{"location":"agent/parameters/input-parameters/#string-parameter","title":"String Parameter","text":"<pre><code>{\n  \"name\": \"username\",\n  \"description\": \"User's login name\",\n  \"type\": \"STRING\",\n  \"required\": true,\n  \"source\": \"task_config\",\n  \"value\": \"john_doe\"\n}\n</code></pre>"},{"location":"agent/parameters/input-parameters/#number-parameter","title":"Number Parameter","text":"<pre><code>{\n  \"name\": \"age\",\n  \"description\": \"User's age\",\n  \"type\": \"INTEGER\",\n  \"required\": true,\n  \"source\": \"task_config\",\n  \"value\": 25\n}\n</code></pre>"},{"location":"agent/parameters/input-parameters/#2d-array-example","title":"2D Array Example","text":"<pre><code>{\n  \"name\": \"matrix\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"integer\",\n      \"items\": null,\n      \"properties\": null\n    },\n    \"properties\": null\n  },\n  \"properties\": null,\n  \"description\": \"2D matrix of values\",\n  \"required\": true\n}\n</code></pre>"},{"location":"agent/parameters/input-parameters/#object-example","title":"Object Example","text":"<pre><code>{\n  \"name\": \"userProfile\",\n  \"type\": \"object\",\n  \"items\": null,\n  \"properties\": [\n    {\n      \"name\": \"firstName\",\n      \"type\": \"string\",\n      \"description\": \"User's first name\",\n      \"required\": true\n    },\n    {\n      \"name\": \"age\",\n      \"type\": \"integer\",\n      \"description\": \"User's age\",\n      \"required\": false\n    }\n  ]\n}\n</code></pre>"},{"location":"agent/parameters/input-parameters/#validation-rules","title":"Validation Rules","text":"Type RulesInvalid Examples <ol> <li> <p>Object Properties</p> <ul> <li>Only basic types allowed (string, integer, float, boolean)</li> <li>All fields required (name, description, type, required)</li> <li>No nested objects</li> </ul> </li> <li> <p>Array Items</p> <ul> <li>Maximum 2D arrays</li> <li>Basic types or objects for elements</li> <li>Proper null values for unused fields</li> </ul> </li> <li> <p>Type Consistency</p> <ul> <li>Must follow exact schema</li> <li>No additional fields</li> <li>Proper null handling</li> </ul> </li> </ol> <pre><code>// \u274c 3D Array (Not Allowed)\n{\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"array\",  // Third level not allowed\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n}\n\n// \u274c Nested Object (Not Allowed)\n{\n  \"type\": \"object\",\n  \"properties\": [\n    {\n      \"name\": \"address\",\n      \"type\": \"object\",  // Cannot use object type in properties\n      \"required\": true\n    }\n  ]\n}\n</code></pre>"},{"location":"agent/parameters/input-parameters/#best-practices","title":"Best Practices","text":"<ol> <li> <p>Naming Conventions</p> <ul> <li>Use clear, descriptive names</li> <li>Follow consistent conventions</li> <li>Indicate purpose in name</li> </ul> </li> <li> <p>Documentation</p> <ul> <li>Be specific and clear</li> <li>Include format requirements</li> <li>Note any dependencies</li> </ul> </li> <li> <p>Type Selection</p> <ul> <li>Use simplest type possible</li> <li>Consider data flow requirements</li> <li>Plan for scale</li> </ul> </li> <li> <p>Validation</p> <ul> <li>Set appropriate required flags</li> <li>Include format constraints</li> <li>Consider edge cases</li> </ul> </li> </ol>"},{"location":"agent/parameters/input-parameters/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"Issue Solution Type mismatch Verify data type matches configuration Missing required value Check source configuration Invalid format Review validation rules Data source error Verify data lake configuration Invalid object property Use only allowed basic types Array depth exceeded Restructure to 2D maximum"},{"location":"agent/parameters/output-parameters/","title":"Output Parameters","text":""},{"location":"agent/parameters/output-parameters/#overview","title":"Overview","text":"<p>Output parameters define the expected output format and structure from tasks in your workflow. This guide covers all available output parameter types and their configurations.</p>"},{"location":"agent/parameters/output-parameters/#output-parameter-types","title":"Output Parameter Types","text":""},{"location":"agent/parameters/output-parameters/#basic-types","title":"Basic Types","text":"<pre><code>BOOLEAN  # True/False values\nINTEGER  # Whole numbers\nFLOAT    # Decimal numbers\nSTRING   # Text values\nDATETIME # Date and time values\n</code></pre>"},{"location":"agent/parameters/output-parameters/#structured-types","title":"Structured Types","text":"<pre><code>ENTITY   # Entity references\nJSON     # JSON formatted data\nARRAY    # List of items\nOBJECT   # Complex objects\nENUM     # Enumerated values\n</code></pre>"},{"location":"agent/parameters/output-parameters/#file-types","title":"File Types","text":"<pre><code>TEXT     # Plain text files\nMARKDOWN # Markdown formatted text\nHTML     # HTML content\nCODE     # Source code\nPDF      # PDF documents\nCSV      # CSV data\nXML      # XML data\nFILE     # Generic files\nPPT      # PowerPoint presentations\n</code></pre>"},{"location":"agent/parameters/output-parameters/#media-types","title":"Media Types","text":"<pre><code>IMAGE    # Image files\nVIDEO    # Video files\nAUDIO    # Audio files\nGIF      # GIF animations\n</code></pre>"},{"location":"agent/parameters/output-parameters/#web-types","title":"Web Types","text":"<pre><code>URL      # Web URLs\nEMAIL    # Email addresses\n</code></pre>"},{"location":"agent/parameters/output-parameters/#special-types","title":"Special Types","text":"<pre><code>TABLE    # Tabular data\nDOCUMENT # Document files\n</code></pre>"},{"location":"agent/parameters/output-parameters/#configuration-examples","title":"Configuration Examples","text":""},{"location":"agent/parameters/output-parameters/#1-basic-type-configuration","title":"1. Basic Type Configuration","text":"<pre><code>{\n    \"name\": \"is_valid\",\n    \"type\": \"BOOLEAN\",\n    \"description\": \"Indicates if the process was successful\"\n}\n</code></pre>"},{"location":"agent/parameters/output-parameters/#2-array-type-configuration","title":"2. Array Type Configuration","text":"<pre><code>{\n    \"name\": \"results\",\n    \"type\": \"ARRAY\",\n    \"items\": {\n        \"type\": \"STRING\"\n    },\n    \"description\": \"List of processed items\"\n}\n</code></pre>"},{"location":"agent/parameters/output-parameters/#3-object-type-configuration","title":"3. Object Type Configuration","text":"<pre><code>{\n    \"name\": \"user_data\",\n    \"type\": \"OBJECT\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"INTEGER\",\n            \"description\": \"User ID\"\n        },\n        \"email\": {\n            \"type\": \"STRING\",\n            \"description\": \"User email\"\n        }\n    },\n    \"description\": \"User information object\"\n}\n</code></pre>"},{"location":"agent/parameters/output-parameters/#4-file-output-configuration","title":"4. File Output Configuration","text":"<pre><code>{\n    \"name\": \"report\",\n    \"type\": \"PDF\",\n    \"description\": \"Generated report file\",\n    \"content\": null,\n    \"gaife_internal_is_data_visible\": true,\n    \"gaife_internal_is_data_editable\": false\n}\n</code></pre>"},{"location":"agent/parameters/output-parameters/#task-specific-examples","title":"Task-Specific Examples","text":""},{"location":"agent/parameters/output-parameters/#ai-task-output","title":"AI Task Output","text":"<pre><code>{\n    \"name\": \"sentiment_analysis\",\n    \"type\": \"OBJECT\",\n    \"properties\": {\n        \"sentiment\": {\n            \"type\": \"STRING\",\n            \"description\": \"Detected sentiment\"\n        },\n        \"confidence\": {\n            \"type\": \"FLOAT\",\n            \"description\": \"Confidence score\"\n        }\n    }\n}\n</code></pre>"},{"location":"agent/parameters/output-parameters/#app-task-output","title":"App Task Output","text":"<pre><code>{\n    \"name\": \"api_response\",\n    \"type\": \"JSON\",\n    \"description\": \"API response data\",\n    \"gaife_internal_is_data_visible\": true\n}\n</code></pre>"},{"location":"agent/parameters/output-parameters/#coder-task-output","title":"Coder Task Output","text":"<pre><code>{\n    \"name\": \"calculation_result\",\n    \"type\": \"OBJECT\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"FLOAT\",\n            \"description\": \"Calculated value\"\n        },\n        \"metadata\": {\n            \"type\": \"OBJECT\",\n            \"description\": \"Additional information\"\n        }\n    }\n}\n</code></pre>"},{"location":"agent/parameters/output-parameters/#visibility-and-editability","title":"Visibility and Editability","text":"<p>Control output parameter visibility and editability:</p> <pre><code>{\n    \"name\": \"sensitive_data\",\n    \"type\": \"OBJECT\",\n    \"gaife_internal_is_data_visible\": false,\n    \"gaife_internal_is_data_editable\": false\n}\n</code></pre>"},{"location":"agent/parameters/output-parameters/#data-source-configuration","title":"Data Source Configuration","text":""},{"location":"agent/parameters/output-parameters/#memory-storage","title":"Memory Storage","text":"<pre><code>{\n    \"name\": \"result\",\n    \"type\": \"OBJECT\",\n    \"data_source\": \"MEMORY\"\n}\n</code></pre>"},{"location":"agent/parameters/output-parameters/#data-lake-storage","title":"Data Lake Storage","text":"<pre><code>{\n    \"name\": \"large_dataset\",\n    \"type\": \"ARRAY\",\n    \"data_source\": \"DATA_LAKE\",\n    \"data_lake_id\": \"12345\"\n}\n</code></pre>"},{"location":"agent/parameters/output-parameters/#validation-rules","title":"Validation Rules","text":""},{"location":"agent/parameters/output-parameters/#type-specific-validation","title":"Type-Specific Validation","text":"<ol> <li> <p>Basic Types</p> <ul> <li>BOOLEAN: true/false</li> <li>INTEGER: whole numbers</li> <li>FLOAT: decimal numbers</li> <li>STRING: text values</li> <li>DATETIME: valid date/time format</li> </ul> </li> <li> <p>Array Validation</p> <ul> <li>Must have defined item type</li> <li>Items must match specified type</li> <li>Valid for nested arrays</li> </ul> </li> <li> <p>Object Validation</p> <ul> <li>Properties must be defined</li> <li>Property types must be valid</li> <li>Required properties present</li> </ul> </li> </ol>"},{"location":"agent/parameters/output-parameters/#best-practices","title":"Best Practices","text":""},{"location":"agent/parameters/output-parameters/#1-naming-conventions","title":"1. Naming Conventions","text":"<p>\u2705 Do:</p> <pre><code>{\n    \"name\": \"userProfileData\",\n    \"description\": \"Complete user profile information\"\n}\n</code></pre> <p>\u274c Don't:</p> <pre><code>{\n    \"name\": \"data1\",\n    \"description\": \"some data\"\n}\n</code></pre>"},{"location":"agent/parameters/output-parameters/#2-type-selection","title":"2. Type Selection","text":"<ul> <li>Use simplest type possible</li> <li>Consider downstream requirements</li> <li>Document format requirements</li> </ul>"},{"location":"agent/parameters/output-parameters/#3-documentation","title":"3. Documentation","text":"<ul> <li>Clear descriptions</li> <li>Format examples</li> <li>Usage notes</li> </ul>"},{"location":"agent/parameters/output-parameters/#common-issues-and-solutions","title":"Common Issues and Solutions","text":""},{"location":"agent/parameters/output-parameters/#issue-1-type-mismatch","title":"Issue 1: Type Mismatch","text":"<ul> <li>Problem: Output type doesn't match connected input</li> <li>Solution: Verify type compatibility between connected tasks</li> </ul>"},{"location":"agent/parameters/output-parameters/#issue-2-missing-properties","title":"Issue 2: Missing Properties","text":"<ul> <li>Problem: Required object properties not defined</li> <li>Solution: Define all required properties in object type</li> </ul>"},{"location":"agent/parameters/output-parameters/#issue-3-visibility-issues","title":"Issue 3: Visibility Issues","text":"<ul> <li>Problem: Data not visible in UI</li> <li>Solution: Check gaife_internal_is_data_visible setting</li> </ul>"},{"location":"agent/parameters/output-parameters/#examples-by-use-case","title":"Examples by Use Case","text":""},{"location":"agent/parameters/output-parameters/#1-data-processing-result","title":"1. Data Processing Result","text":"<pre><code>{\n    \"name\": \"processing_result\",\n    \"type\": \"OBJECT\",\n    \"properties\": {\n        \"status\": \"STRING\",\n        \"processed_items\": \"INTEGER\",\n        \"errors\": \"ARRAY\"\n    }\n}\n</code></pre>"},{"location":"agent/parameters/output-parameters/#2-file-generation","title":"2. File Generation","text":"<pre><code>{\n    \"name\": \"generated_file\",\n    \"type\": \"PDF\",\n    \"description\": \"Generated report\",\n    \"gaife_internal_is_data_visible\": true\n}\n</code></pre>"},{"location":"agent/parameters/output-parameters/#3-api-integration","title":"3. API Integration","text":"<pre><code>{\n    \"name\": \"api_result\",\n    \"type\": \"JSON\",\n    \"description\": \"API response data\"\n}\n</code></pre>"},{"location":"agent/tasks/ai-task/","title":"AI Task","text":""},{"location":"agent/tasks/ai-task/#overview","title":"Overview","text":"<p>AI Tasks are designed for intelligent processing operations using artificial intelligence capabilities. These tasks can handle complex operations like text analysis, content generation, and data processing.</p>"},{"location":"agent/tasks/ai-task/#visual-example","title":"Visual Example","text":""},{"location":"agent/tasks/ai-task/#configuration-structure","title":"Configuration Structure","text":"<pre><code>{\n    \"type\": \"TASK\",\n    \"block\": {\n        \"name\": \"AI Task Name\",\n        \"type\": \"TASK\",\n        \"instructions\": \"Detailed instructions for the AI\",\n        \"input_parameters\": [],\n        \"expected_output\": [],\n        \"dependencies\": [],\n        \"error_policy\": \"RAISE\"\n    }\n}\n</code></pre>"},{"location":"agent/tasks/ai-task/#required-fields","title":"Required Fields","text":"Field Type Description Required name string Unique identifier for the task Yes instructions string Clear instructions for processing Yes input_parameters array Input configuration Yes expected_output array Output configuration Yes dependencies array List of dependent tasks No error_policy string Error handling strategy No"},{"location":"agent/tasks/ai-task/#input-parameters","title":"Input Parameters","text":""},{"location":"agent/tasks/ai-task/#text-input","title":"Text Input","text":"<pre><code>{\n    \"name\": \"input_text\",\n    \"type\": \"STRING\",\n    \"description\": \"Text content to process\",\n    \"required\": true,\n    \"source\": \"task_config\"\n}\n</code></pre>"},{"location":"agent/tasks/ai-task/#structured-data-input","title":"Structured Data Input","text":"<pre><code>{\n    \"name\": \"data_object\",\n    \"type\": \"OBJECT\",\n    \"description\": \"Structured data for analysis\",\n    \"properties\": [\n        {\n            \"name\": \"field1\",\n            \"type\": \"STRING\",\n            \"description\": \"First field\"\n        },\n        {\n            \"name\": \"field2\",\n            \"type\": \"INTEGER\",\n            \"description\": \"Second field\"\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/ai-task/#array-input","title":"Array Input","text":"<pre><code>{\n    \"name\": \"items\",\n    \"type\": \"ARRAY\",\n    \"description\": \"List of items to process\",\n    \"items\": {\n        \"type\": \"STRING\"\n    }\n}\n</code></pre>"},{"location":"agent/tasks/ai-task/#output-parameters","title":"Output Parameters","text":""},{"location":"agent/tasks/ai-task/#basic-output","title":"Basic Output","text":"<pre><code>{\n    \"name\": \"result\",\n    \"type\": \"STRING\",\n    \"description\": \"Processing result\"\n}\n</code></pre>"},{"location":"agent/tasks/ai-task/#analysis-output","title":"Analysis Output","text":"<pre><code>{\n    \"name\": \"analysis\",\n    \"type\": \"OBJECT\",\n    \"properties\": {\n        \"sentiment\": {\n            \"type\": \"STRING\",\n            \"description\": \"Detected sentiment\"\n        },\n        \"confidence\": {\n            \"type\": \"FLOAT\",\n            \"description\": \"Confidence score\"\n        },\n        \"categories\": {\n            \"type\": \"ARRAY\",\n            \"items\": {\n                \"type\": \"STRING\"\n            },\n            \"description\": \"Detected categories\"\n        }\n    }\n}\n</code></pre>"},{"location":"agent/tasks/ai-task/#common-use-cases","title":"Common Use Cases","text":""},{"location":"agent/tasks/ai-task/#1-text-analysis","title":"1. Text Analysis","text":"<pre><code>{\n    \"name\": \"Analyze Text\",\n    \"instructions\": \"Analyze the input text for sentiment and key topics\",\n    \"input_parameters\": [\n        {\n            \"name\": \"text\",\n            \"type\": \"STRING\",\n            \"description\": \"Text to analyze\",\n            \"required\": true\n        }\n    ],\n    \"expected_output\": [\n        {\n            \"name\": \"analysis\",\n            \"type\": \"OBJECT\",\n            \"properties\": {\n                \"sentiment\": \"STRING\",\n                \"topics\": \"ARRAY\",\n                \"summary\": \"STRING\"\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/ai-task/#2-content-generation","title":"2. Content Generation","text":"<pre><code>{\n    \"name\": \"Generate Content\",\n    \"instructions\": \"Generate content based on provided parameters\",\n    \"input_parameters\": [\n        {\n            \"name\": \"topic\",\n            \"type\": \"STRING\",\n            \"description\": \"Content topic\",\n            \"required\": true\n        },\n        {\n            \"name\": \"style\",\n            \"type\": \"STRING\",\n            \"description\": \"Writing style\",\n            \"required\": true\n        },\n        {\n            \"name\": \"length\",\n            \"type\": \"INTEGER\",\n            \"description\": \"Target word count\",\n            \"required\": true\n        }\n    ],\n    \"expected_output\": [\n        {\n            \"name\": \"content\",\n            \"type\": \"STRING\",\n            \"description\": \"Generated content\"\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/ai-task/#best-practices","title":"Best Practices","text":""},{"location":"agent/tasks/ai-task/#1-writing-instructions","title":"1. Writing Instructions","text":"<p>\u2705 Do:</p> <ul> <li>Be specific and clear</li> <li>Include examples when helpful</li> <li>Specify format requirements</li> <li>Define expected behavior</li> </ul> <p>\u274c Don't:</p> <ul> <li>Use vague descriptions</li> <li>Omit important details</li> <li>Assume context</li> </ul>"},{"location":"agent/tasks/ai-task/#2-input-configuration","title":"2. Input Configuration","text":"<p>\u2705 Do:</p> <ul> <li>Validate input types</li> <li>Set required fields</li> <li>Provide clear descriptions</li> <li>Use appropriate types</li> </ul> <p>\u274c Don't:</p> <ul> <li>Use overly complex structures</li> <li>Skip parameter descriptions</li> <li>Ignore validation</li> </ul>"},{"location":"agent/tasks/ai-task/#3-output-configuration","title":"3. Output Configuration","text":"<p>\u2705 Do:</p> <ul> <li>Define clear structure</li> <li>Include all necessary fields</li> <li>Document format requirements</li> <li>Handle error cases</li> </ul> <p>\u274c Don't:</p> <ul> <li>Use ambiguous types</li> <li>Omit error handling</li> <li>Ignore edge cases</li> </ul>"},{"location":"agent/tasks/ai-task/#error-handling","title":"Error Handling","text":""},{"location":"agent/tasks/ai-task/#error-policies","title":"Error Policies","text":"<pre><code>{\n    \"error_policy\": \"RAISE\", // Stop on error\n    \"error_policy\": \"IGNORE\", // Continue execution\n    \"error_policy\": \"RETRY\" // Retry on failure\n}\n</code></pre>"},{"location":"agent/tasks/ai-task/#validation","title":"Validation","text":"<ol> <li>Input validation</li> <li>Output validation</li> <li>Error reporting</li> </ol>"},{"location":"agent/tasks/ai-task/#examples","title":"Examples","text":""},{"location":"agent/tasks/ai-task/#text-classification","title":"Text Classification","text":"<pre><code>{\n    \"name\": \"Classify Text\",\n    \"instructions\": \"Classify the input text into predefined categories\",\n    \"input_parameters\": [\n        {\n            \"name\": \"text\",\n            \"type\": \"STRING\",\n            \"description\": \"Text to classify\",\n            \"required\": true\n        },\n        {\n            \"name\": \"categories\",\n            \"type\": \"ARRAY\",\n            \"items\": {\n                \"type\": \"STRING\"\n            },\n            \"description\": \"Available categories\",\n            \"required\": true\n        }\n    ],\n    \"expected_output\": [\n        {\n            \"name\": \"classification\",\n            \"type\": \"OBJECT\",\n            \"properties\": {\n                \"category\": \"STRING\",\n                \"confidence\": \"FLOAT\",\n                \"alternatives\": \"ARRAY\"\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/ai-task/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"Issue Solution Unclear Instructions Provide specific, detailed instructions Input Validation Fails Check input types and requirements Output Mismatch Verify output structure matches requirements Performance Issues Optimize input/output size"},{"location":"agent/tasks/ai-task/#integration-with-other-tasks","title":"Integration with Other Tasks","text":""},{"location":"agent/tasks/ai-task/#passing-results","title":"Passing Results","text":"<pre><code>graph TD\n    A[AI Task] --&gt; B[Human Task]\n    A --&gt; C[App Task]\n    A --&gt; D[Coder Task]</code></pre>"},{"location":"agent/tasks/app-task/","title":"App Task","text":""},{"location":"agent/tasks/app-task/#overview","title":"Overview","text":"<p>App Tasks enable integration with external tools and applications in your workflow. These tasks are designed for operations like data processing, file operations, and API integrations.</p>"},{"location":"agent/tasks/app-task/#visual-example","title":"Visual Example","text":""},{"location":"agent/tasks/app-task/#configuration-structure","title":"Configuration Structure","text":"<pre><code>{\n    \"type\": \"APP_TASK\",\n    \"block\": {\n        \"name\": \"App Task Name\",\n        \"type\": \"APP_TASK\",\n        \"instructions\": \"Task instructions\",\n        \"provider\": \"provider_name\",\n        \"tool_name\": \"tool_name\",\n        \"tool_id\": 123,\n        \"org_integration_id\": null,\n        \"input_parameters\": [],\n        \"expected_output\": [],\n        \"dependencies\": [],\n        \"error_policy\": \"RAISE\"\n    }\n}\n</code></pre>"},{"location":"agent/tasks/app-task/#required-fields","title":"Required Fields","text":"Field Type Description Required name string Task identifier Yes instructions string Task instructions Yes provider string Tool provider Yes tool_name string Name of the tool Yes tool_id integer Tool identifier Yes org_integration_id integer Organization integration ID No input_parameters array Input configuration Yes expected_output array Output configuration Yes"},{"location":"agent/tasks/app-task/#provider-types","title":"Provider Types","text":"<p>Available providers for App Tasks:</p> <ul> <li>PDF</li> <li>CSV</li> <li>Drive</li> <li>Code</li> <li>Email</li> <li>Notion</li> <li>Custom</li> </ul>"},{"location":"agent/tasks/app-task/#input-parameters","title":"Input Parameters","text":""},{"location":"agent/tasks/app-task/#basic-input","title":"Basic Input","text":"<pre><code>{\n    \"name\": \"filename\",\n    \"type\": \"STRING\",\n    \"description\": \"Name of the file to process\",\n    \"required\": true,\n    \"source\": \"task_config\"\n}\n</code></pre>"},{"location":"agent/tasks/app-task/#file-content-input","title":"File Content Input","text":"<pre><code>{\n    \"name\": \"file_content\",\n    \"type\": \"STRING\",\n    \"description\": \"Content to write to file\",\n    \"required\": true,\n    \"source\": \"task_config\"\n}\n</code></pre>"},{"location":"agent/tasks/app-task/#configuration-input","title":"Configuration Input","text":"<pre><code>{\n    \"name\": \"settings\",\n    \"type\": \"OBJECT\",\n    \"description\": \"Tool configuration settings\",\n    \"properties\": [\n        {\n            \"name\": \"format\",\n            \"type\": \"STRING\",\n            \"description\": \"Output format\",\n            \"required\": true\n        },\n        {\n            \"name\": \"options\",\n            \"type\": \"OBJECT\",\n            \"description\": \"Additional options\"\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/app-task/#output-parameters","title":"Output Parameters","text":""},{"location":"agent/tasks/app-task/#file-output","title":"File Output","text":"<pre><code>{\n    \"name\": \"processed_file\",\n    \"type\": \"FILE\",\n    \"description\": \"Processed file output\"\n}\n</code></pre>"},{"location":"agent/tasks/app-task/#api-response","title":"API Response","text":"<pre><code>{\n    \"name\": \"api_response\",\n    \"type\": \"OBJECT\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"STRING\",\n            \"description\": \"Response status\"\n        },\n        \"data\": {\n            \"type\": \"OBJECT\",\n            \"description\": \"Response data\"\n        }\n    }\n}\n</code></pre>"},{"location":"agent/tasks/app-task/#common-use-cases","title":"Common Use Cases","text":""},{"location":"agent/tasks/app-task/#1-pdf-generation","title":"1. PDF Generation","text":"<pre><code>{\n    \"name\": \"Generate PDF\",\n    \"provider\": \"pdf\",\n    \"tool_name\": \"writer\",\n    \"tool_id\": 12,\n    \"input_parameters\": [\n        {\n            \"name\": \"html_content\",\n            \"type\": \"STRING\",\n            \"description\": \"HTML content for PDF\",\n            \"required\": true\n        },\n        {\n            \"name\": \"filename\",\n            \"type\": \"STRING\",\n            \"description\": \"Output filename\",\n            \"required\": true\n        }\n    ],\n    \"expected_output\": [\n        {\n            \"name\": \"pdf_url\",\n            \"type\": \"STRING\",\n            \"description\": \"URL of generated PDF\"\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/app-task/#2-csv-processing","title":"2. CSV Processing","text":"<pre><code>{\n    \"name\": \"Process CSV\",\n    \"provider\": \"csv\",\n    \"tool_name\": \"processor\",\n    \"tool_id\": 34,\n    \"input_parameters\": [\n        {\n            \"name\": \"csv_data\",\n            \"type\": \"ARRAY\",\n            \"description\": \"CSV data to process\",\n            \"required\": true\n        }\n    ],\n    \"expected_output\": [\n        {\n            \"name\": \"processed_data\",\n            \"type\": \"ARRAY\",\n            \"description\": \"Processed CSV data\"\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/app-task/#integration-configuration","title":"Integration Configuration","text":""},{"location":"agent/tasks/app-task/#tool-setup","title":"Tool Setup","text":"<pre><code>{\n    \"provider\": \"provider_name\",\n    \"tool_name\": \"tool_name\",\n    \"tool_id\": 123,\n    \"org_integration_id\": 456\n}\n</code></pre>"},{"location":"agent/tasks/app-task/#authentication","title":"Authentication","text":"<pre><code>{\n    \"auth_type\": \"oauth|apikey|basic\",\n    \"credentials\": {\n        \"key\": \"value\"\n    }\n}\n</code></pre>"},{"location":"agent/tasks/app-task/#best-practices","title":"Best Practices","text":""},{"location":"agent/tasks/app-task/#1-tool-selection","title":"1. Tool Selection","text":"<p>\u2705 Do:</p> <ul> <li>Choose appropriate provider</li> <li>Verify tool capabilities</li> <li>Check authentication requirements</li> <li>Test integration thoroughly</li> </ul> <p>\u274c Don't:</p> <ul> <li>Use deprecated tools</li> <li>Ignore rate limits</li> <li>Skip error handling</li> </ul>"},{"location":"agent/tasks/app-task/#2-input-configuration","title":"2. Input Configuration","text":"<p>\u2705 Do:</p> <ul> <li>Validate input formats</li> <li>Document requirements</li> <li>Handle file types correctly</li> <li>Set appropriate timeouts</li> </ul> <p>\u274c Don't:</p> <ul> <li>Skip validation</li> <li>Ignore size limits</li> <li>Use hardcoded credentials</li> </ul>"},{"location":"agent/tasks/app-task/#error-handling","title":"Error Handling","text":""},{"location":"agent/tasks/app-task/#common-errors","title":"Common Errors","text":"<ol> <li>Authentication Failures</li> <li>Rate Limiting</li> <li>Invalid Input</li> <li>Network Issues</li> </ol>"},{"location":"agent/tasks/app-task/#error-policy","title":"Error Policy","text":"<pre><code>{\n    \"error_policy\": \"RAISE|IGNORE|RETRY\",\n    \"max_retries\": 3,\n    \"retry_delay\": 60\n}\n</code></pre>"},{"location":"agent/tasks/app-task/#provider-specific-examples","title":"Provider-Specific Examples","text":""},{"location":"agent/tasks/app-task/#pdf-provider","title":"PDF Provider","text":"<pre><code>{\n    \"provider\": \"pdf\",\n    \"tool_name\": \"writer\",\n    \"input_parameters\": [\n        {\n            \"name\": \"template\",\n            \"type\": \"STRING\",\n            \"description\": \"PDF template\"\n        },\n        {\n            \"name\": \"data\",\n            \"type\": \"OBJECT\",\n            \"description\": \"Template data\"\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/app-task/#drive-provider","title":"Drive Provider","text":"<pre><code>{\n    \"provider\": \"drive\",\n    \"tool_name\": \"file_manager\",\n    \"input_parameters\": [\n        {\n            \"name\": \"file_id\",\n            \"type\": \"STRING\",\n            \"description\": \"Drive file ID\"\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/app-task/#integration-flow","title":"Integration Flow","text":"<pre><code>graph TD\n    A[Input Data] --&gt; B[App Task]\n    B --&gt; C[External Tool]\n    C --&gt; D[Process Result]\n    D --&gt; E[Output Data]</code></pre>"},{"location":"agent/tasks/app-task/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"Issue Solution Authentication Failed Verify credentials and permissions Rate Limit Exceeded Implement backoff strategy Invalid Input Format Validate input before processing Tool Unavailable Check tool status and fallback"},{"location":"agent/tasks/coder-task/","title":"\ud83d\udcbb Coder Task","text":""},{"location":"agent/tasks/coder-task/#overview","title":"Overview","text":"<p>Coder Tasks allow you to execute pre-defined code artifacts within your workflow. These tasks integrate the computational power of Coder Artifacts into your workflow processes. Coder Tasks are ideal for custom calculations, data transformations, and complex business logic implementation.</p>"},{"location":"agent/tasks/coder-task/#visual-example","title":"Visual Example","text":""},{"location":"agent/tasks/coder-task/#configuration-structure","title":"Configuration Structure","text":"<pre><code>{\n    \"type\": \"CODER\",\n    \"block\": {\n        \"name\": \"Coder Task Name\",\n        \"type\": \"CODER\",\n        \"instructions\": \"Task instructions\",\n        \"code_artifact_id\": 123,\n        \"input_parameters\": [],\n        \"expected_output\": [],\n        \"dependencies\": [],\n        \"error_policy\": \"RAISE\"\n    }\n}\n</code></pre>"},{"location":"agent/tasks/coder-task/#required-fields","title":"Required Fields","text":"Field Type Description Required name string Task identifier \u2705 instructions string Task instructions \u2705 code_artifact_id integer Reference to code artifact \u2705 input_parameters array Input configuration \u2705 expected_output array Output configuration \u2705 dependencies array Task dependencies \u274c error_policy string Error handling strategy \u274c"},{"location":"agent/tasks/coder-task/#input-parameters","title":"Input Parameters","text":"<p>The input parameters define what data your Coder Task will receive. These parameters will be passed to the <code>arguments</code> dictionary in your Coder Artifact function.</p>"},{"location":"agent/tasks/coder-task/#basic-input","title":"Basic Input","text":"<pre><code>{\n    \"name\": \"data\",\n    \"type\": \"STRING\",\n    \"description\": \"Input data for processing\",\n    \"required\": true,\n    \"source\": \"task_config\"\n}\n</code></pre>"},{"location":"agent/tasks/coder-task/#complex-input","title":"Complex Input","text":"<pre><code>{\n    \"name\": \"config\",\n    \"type\": \"OBJECT\",\n    \"description\": \"Configuration object\",\n    \"properties\": [\n        {\n            \"name\": \"algorithm\",\n            \"type\": \"STRING\",\n            \"description\": \"Algorithm selection\",\n            \"required\": true\n        },\n        {\n            \"name\": \"parameters\",\n            \"type\": \"OBJECT\",\n            \"description\": \"Algorithm parameters\",\n            \"properties\": [\n                {\n                    \"name\": \"iterations\",\n                    \"type\": \"INTEGER\",\n                    \"description\": \"Number of iterations\",\n                    \"required\": true\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/coder-task/#output-parameters","title":"Output Parameters","text":"<p>Output parameters define the structure of data that your Coder Task will return. These should match the structure returned by your Coder Artifact function.</p>"},{"location":"agent/tasks/coder-task/#simple-output","title":"Simple Output","text":"<pre><code>{\n    \"name\": \"result\",\n    \"type\": \"STRING\",\n    \"description\": \"Processing result\"\n}\n</code></pre>"},{"location":"agent/tasks/coder-task/#complex-output","title":"Complex Output","text":"<pre><code>{\n    \"name\": \"analysis_result\",\n    \"type\": \"OBJECT\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"FLOAT\",\n            \"description\": \"Calculated value\"\n        },\n        \"metadata\": {\n            \"type\": \"OBJECT\",\n            \"description\": \"Processing metadata\"\n        },\n        \"logs\": {\n            \"type\": \"ARRAY\",\n            \"items\": {\n                \"type\": \"STRING\"\n            },\n            \"description\": \"Processing logs\"\n        }\n    }\n}\n</code></pre>"},{"location":"agent/tasks/coder-task/#workflow-integration","title":"Workflow Integration","text":"<p>Coder Tasks act as computational nodes in your workflow, taking input from previous tasks, processing it using the referenced Coder Artifact, and outputting results for subsequent tasks.</p>"},{"location":"agent/tasks/coder-task/#common-use-cases","title":"Common Use Cases","text":""},{"location":"agent/tasks/coder-task/#1-data-transformation","title":"1. Data Transformation","text":"<pre><code>{\n    \"name\": \"Transform Data\",\n    \"code_artifact_id\": 123,\n    \"instructions\": \"Transform input data according to specified rules\",\n    \"input_parameters\": [\n        {\n            \"name\": \"data\",\n            \"type\": \"OBJECT\",\n            \"description\": \"Raw data object\",\n            \"required\": true\n        },\n        {\n            \"name\": \"transformation_rules\",\n            \"type\": \"ARRAY\",\n            \"description\": \"Transformation rules\",\n            \"required\": true\n        }\n    ],\n    \"expected_output\": [\n        {\n            \"name\": \"transformed_data\",\n            \"type\": \"OBJECT\",\n            \"description\": \"Transformed data\"\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/coder-task/#2-custom-calculation","title":"2. Custom Calculation","text":"<pre><code>{\n    \"name\": \"Calculate Metrics\",\n    \"code_artifact_id\": 456,\n    \"instructions\": \"Calculate custom business metrics\",\n    \"input_parameters\": [\n        {\n            \"name\": \"raw_metrics\",\n            \"type\": \"ARRAY\",\n            \"description\": \"Raw metric data\",\n            \"required\": true\n        }\n    ],\n    \"expected_output\": [\n        {\n            \"name\": \"calculated_metrics\",\n            \"type\": \"OBJECT\",\n            \"properties\": {\n                \"kpi1\": \"FLOAT\",\n                \"kpi2\": \"FLOAT\",\n                \"summary\": \"STRING\"\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/coder-task/#3-invoice-processing","title":"3. Invoice Processing","text":"<pre><code>{\n    \"name\": \"Calculate Invoice Information\",\n    \"code_artifact_id\": 789,\n    \"instructions\": \"Compute the total invoice amount based on the collected item details\",\n    \"input_parameters\": [\n        {\n            \"name\": \"items_to_be_billed\",\n            \"type\": \"ARRAY\",\n            \"items\": {\n                \"type\": \"OBJECT\",\n                \"properties\": {\n                    \"item_price\": { \"type\": \"STRING\" },\n                    \"item_quantity\": { \"type\": \"STRING\" }\n                }\n            },\n            \"description\": \"List of items with price and quantity\",\n            \"required\": true\n        }\n    ],\n    \"expected_output\": [\n        {\n            \"name\": \"calculation_amount\",\n            \"type\": \"OBJECT\",\n            \"properties\": {\n                \"total_tax\": { \"type\": \"STRING\" },\n                \"current_date\": { \"type\": \"STRING\" },\n                \"total_amount\": { \"type\": \"STRING\" },\n                \"total_state_tax\": { \"type\": \"STRING\" },\n                \"total_central_tax\": { \"type\": \"STRING\" },\n                \"total_amount_with_gst\": { \"type\": \"STRING\" }\n            },\n            \"description\": \"Calculated invoice amounts\"\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/coder-task/#best-practices","title":"Best Practices","text":""},{"location":"agent/tasks/coder-task/#1-code-artifact-management","title":"1. Code Artifact Management","text":"<p>\u2705 Do:</p> <ul> <li>Use version control for your Coder Artifacts</li> <li>Document dependencies clearly</li> <li>Include test cases with your Coder Artifacts</li> <li>Handle errors gracefully in your Python code (as shown in the     Coder Artifact documentation)</li> </ul> <p>\u274c Don't:</p> <ul> <li>Hard-code configurations that might change</li> <li>Ignore error cases in your Coder Artifact code</li> <li>Skip input validation in your Python function</li> <li>Mix business logic between Coder Tasks and Coder Artifacts</li> </ul>"},{"location":"agent/tasks/coder-task/#2-input-parameters","title":"2. Input Parameters","text":"<p>\u2705 Do:</p> <ul> <li>Validate all inputs in your Coder Artifact code</li> <li>Document input requirements thoroughly</li> <li>Use appropriate types that match your Coder Artifact expectations</li> <li>Include examples in your documentation</li> </ul> <p>\u274c Don't:</p> <ul> <li>Skip validation in your Coder Artifact code</li> <li>Use ambiguous parameter names</li> <li>Ignore data types that will cause conversion issues</li> </ul>"},{"location":"agent/tasks/coder-task/#3-output-handling","title":"3. Output Handling","text":"<p>\u2705 Do:</p> <ul> <li>Define clear output structure that matches your Coder Artifact return values</li> <li>Include error information in your response</li> <li>Add processing metadata when useful</li> <li>Validate outputs in your Coder Artifact code</li> </ul> <p>\u274c Don't:</p> <ul> <li>Return raw errors without context</li> <li>Skip validation of output data</li> <li>Use inconsistent formats between Coder Artifact and Coder Task configurations</li> </ul>"},{"location":"agent/tasks/coder-task/#error-handling","title":"\u26a0\ufe0f Error Handling","text":""},{"location":"agent/tasks/coder-task/#configuration","title":"Configuration","text":"<pre><code>{\n    \"error_policy\": \"RAISE\",\n    \"retry_count\": 3,\n    \"retry_delay\": 60\n}\n</code></pre>"},{"location":"agent/tasks/coder-task/#error-types","title":"Error Types","text":"<ol> <li>Input Validation Errors: Occurs when input doesn't match expected format</li> <li>Processing Errors: Occurs during execution of the Coder Artifact</li> <li>System Errors: Occurs due to system limitations or failures</li> </ol>"},{"location":"agent/tasks/coder-task/#integration-examples","title":"\ud83d\udd17 Integration Examples","text":""},{"location":"agent/tasks/coder-task/#with-ai-task","title":"With AI Task","text":"<pre><code>graph TD\n    A[AI Task] --&gt; B[Coder Task]\n    B --&gt; C[App Task]</code></pre>"},{"location":"agent/tasks/coder-task/#with-data-processing","title":"With Data Processing","text":"<pre><code>graph TD\n    A[Data Input] --&gt; B[Coder Task]\n    B --&gt; C[Data Validation]\n    C --&gt; D[Result Output]</code></pre>"},{"location":"agent/tasks/coder-task/#common-issues-and-solutions","title":"\u2753 Common Issues and Solutions","text":"Issue Solution Code Artifact Not Found Verify artifact ID and ensure it's published Input Validation Failed Check input types and format against Coder Artifact requirements Processing Error Review error logs in your Coder Artifact and retry Memory Issues Optimize data handling in your Python code"},{"location":"agent/tasks/coder-task/#examples-by-industry","title":"\ud83c\udfe2 Examples by Industry","text":""},{"location":"agent/tasks/coder-task/#finance","title":"Finance","text":"<pre><code>{\n    \"name\": \"Risk Calculator\",\n    \"code_artifact_id\": 789,\n    \"instructions\": \"Calculate investment risk metrics\",\n    \"input_parameters\": [\n        {\n            \"name\": \"portfolio_data\",\n            \"type\": \"OBJECT\",\n            \"description\": \"Portfolio information\",\n            \"required\": true\n        }\n    ],\n    \"expected_output\": [\n        {\n            \"name\": \"risk_metrics\",\n            \"type\": \"OBJECT\",\n            \"properties\": {\n                \"var\": \"FLOAT\",\n                \"sharpe_ratio\": \"FLOAT\",\n                \"risk_level\": \"STRING\"\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/coder-task/#connection-with-coder-artifacts","title":"\ud83d\udd04 Connection with Coder Artifacts","text":"<p>Coder Tasks rely on well-designed Coder Artifacts to function properly. When creating a Coder Task:</p> <ol> <li>Select an existing Coder Artifact from your knowledge base</li> <li>Configure input parameters that match the expectations of your Coder Artifact's function</li> <li>Define expected output that aligns with what your Coder Artifact function returns</li> <li>Provide clear instructions for maintainers to understand the task's purpose</li> </ol> <p>For detailed information on creating effective Coder Artifacts, refer to the Coder Artifact documentation.</p>"},{"location":"agent/tasks/conditional-task/","title":"Conditional Task","text":""},{"location":"agent/tasks/conditional-task/#overview","title":"Overview","text":"<p>Conditional Tasks enable workflow branching based on defined rules and conditions. Each rule evaluates output parameters from previous tasks, allowing for dynamic workflow execution paths. This feature lets you create intelligent workflows that respond to data variations and task outcomes.</p>"},{"location":"agent/tasks/conditional-task/#visual-example","title":"Visual Example","text":""},{"location":"agent/tasks/conditional-task/#configuration-structure","title":"Configuration Structure","text":"<pre><code>{\n    \"type\": \"CONDITIONAL_TASK\",\n    \"block\": {\n        \"name\": \"Route Customer Request\",\n        \"type\": \"CONDITIONAL_TASK\",\n        \"rules\": [\n            {\n                \"conditions\": [\n                    {\n                        \"task\": \"Analyze Request\",\n                        \"parameter\": \"sentiment_score\",\n                        \"parameter_type\": \"FLOAT\",\n                        \"operator\": \"LESS_THAN\",\n                        \"value\": \"0.3\"\n                    },\n                    {\n                        \"task\": \"Analyze Request\",\n                        \"parameter\": \"urgency\",\n                        \"parameter_type\": \"STRING\",\n                        \"operator\": \"EQUAL\",\n                        \"value\": \"high\"\n                    }\n                ],\n                \"then_block\": \"Escalate Request\"\n            },\n            {\n                \"conditions\": [\n                    {\n                        \"task\": \"Analyze Request\",\n                        \"parameter\": \"category\",\n                        \"parameter_type\": \"STRING\",\n                        \"operator\": \"EQUAL\",\n                        \"value\": \"refund\"\n                    }\n                ],\n                \"then_block\": \"Process Refund\"\n            }\n        ],\n        \"dependencies\": [\"Analyze Request\"],\n        \"error_policy\": \"RAISE\"\n    }\n}\n</code></pre>"},{"location":"agent/tasks/conditional-task/#required-fields","title":"Required Fields","text":"Field Type Description Required name string Task identifier Yes rules array Array of condition rules Yes dependencies array Task dependencies No error_policy string Error handling strategy No"},{"location":"agent/tasks/conditional-task/#rules-configuration","title":"Rules Configuration","text":"<p>Each conditional task must have one or more rules. Rules are evaluated in the order they appear in the configuration.</p> <pre><code>{\n    \"rules\": [\n        {\n            \"conditions\": [...],\n            \"then_block\": \"Task ID\"\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/conditional-task/#rule-structure","title":"Rule Structure","text":"<p>Each rule contains:</p> <ul> <li>conditions: Array of conditions that must ALL be satisfied (AND operation)</li> <li>then_block: The task to execute if all conditions are met (defaults to \"END\" if not specified)</li> </ul>"},{"location":"agent/tasks/conditional-task/#condition-configuration","title":"Condition Configuration","text":"<pre><code>{\n    \"conditions\": [\n        {\n            \"task\": \"Previous Task Name\",\n            \"parameter\": \"output_parameter_name\",\n            \"parameter_type\": \"STRING\",\n            \"operator\": \"EQUAL\",\n            \"value\": \"expected_value\"\n        }\n    ]\n}\n</code></pre>"},{"location":"agent/tasks/conditional-task/#condition-fields","title":"Condition Fields","text":"Field Type Description Required task string Source task (must be a dependency) Yes parameter string Output parameter from the source task Yes parameter_type enum Data type of the parameter Yes operator enum Comparison operator Yes value any Value to compare against Yes* <p>* Not required for operators like IS_NULL, IS_NOT_NULL, IS_EMPTY, IS_NOT_EMPTY</p>"},{"location":"agent/tasks/conditional-task/#parameter-types","title":"Parameter Types","text":"<p>The following parameter types are supported:</p> Type Description Example Values STRING Text values \"approval\", \"high\", \"rejected\" INTEGER Whole numbers 1, 42, -10 FLOAT Decimal numbers 0.5, 3.14, -2.5 BOOLEAN True/false values true, false DATETIME Date and time values \"2024-03-15 14:30:00\" ARRAY Lists of values [1, 2, 3], [\"red\", \"green\"] ENUM Predefined set of values \"APPROVED\", \"REJECTED\""},{"location":"agent/tasks/conditional-task/#available-operators","title":"Available Operators","text":"<p>The available operators depend on the data type of the selected parameter:</p>"},{"location":"agent/tasks/conditional-task/#string-operators","title":"String Operators","text":"<ul> <li><code>EQUAL</code>: Exact match</li> <li><code>NOT_EQUAL</code>: Not an exact match</li> <li><code>CONTAINS</code>: String contains value</li> <li><code>STARTS_WITH</code>: String starts with value</li> <li><code>ENDS_WITH</code>: String ends with value</li> <li><code>IS_NULL</code>: Value is null</li> <li><code>IS_NOT_NULL</code>: Value is not null</li> </ul>"},{"location":"agent/tasks/conditional-task/#numeric-operators-integer-float","title":"Numeric Operators (INTEGER, FLOAT)","text":"<ul> <li><code>EQUAL</code>: Equal to</li> <li><code>NOT_EQUAL</code>: Not equal to</li> <li><code>GREATER_THAN</code>: Greater than</li> <li><code>LESS_THAN</code>: Less than</li> <li><code>GREATER_THAN_OR_EQUAL</code>: Greater than or equal to</li> <li><code>LESS_THAN_OR_EQUAL</code>: Less than or equal to</li> <li><code>IS_NULL</code>: Value is null</li> <li><code>IS_NOT_NULL</code>: Value is not null</li> </ul>"},{"location":"agent/tasks/conditional-task/#boolean-operators","title":"Boolean Operators","text":"<ul> <li><code>EQUAL</code>: Equal to (true/false)</li> <li><code>NOT_EQUAL</code>: Not equal to (true/false)</li> <li><code>IS_NULL</code>: Value is null</li> <li><code>IS_NOT_NULL</code>: Value is not null</li> </ul>"},{"location":"agent/tasks/conditional-task/#datetime-operators","title":"DateTime Operators","text":"<ul> <li><code>EQUAL</code>: Equal to</li> <li><code>NOT_EQUAL</code>: Not equal to</li> <li><code>GREATER_THAN</code>: Later than</li> <li><code>LESS_THAN</code>: Earlier than</li> <li><code>GREATER_THAN_OR_EQUAL</code>: Later than or equal to</li> <li><code>LESS_THAN_OR_EQUAL</code>: Earlier than or equal to</li> <li><code>IS_NULL</code>: Value is null</li> <li><code>IS_NOT_NULL</code>: Value is not null</li> </ul>"},{"location":"agent/tasks/conditional-task/#array-operators","title":"Array Operators","text":"<ul> <li><code>IS_EMPTY</code>: Array has no elements</li> <li><code>IS_NOT_EMPTY</code>: Array has at least one element</li> </ul>"},{"location":"agent/tasks/conditional-task/#enum-operators","title":"Enum Operators","text":"<ul> <li><code>EQUAL</code>: Exact match</li> <li><code>NOT_EQUAL</code>: Not an exact match</li> </ul>"},{"location":"agent/tasks/conditional-task/#then-block-configuration","title":"Then Block Configuration","text":"<p>The <code>then_block</code> field specifies which task to execute if all conditions in the rule are satisfied.</p> <pre><code>{\n    \"then_block\": \"Next Task Name\"\n}\n</code></pre> <ul> <li>If no <code>then_block</code> is specified, or if it is set to \"END\", the workflow will terminate</li> <li>Only tasks that have been connected to the conditional task in the workflow editor will appear in the dropdown</li> </ul>"},{"location":"agent/tasks/conditional-task/#common-use-cases","title":"Common Use Cases","text":""},{"location":"agent/tasks/conditional-task/#1-content-routing","title":"1. Content Routing","text":"<pre><code>{\n    \"name\": \"Route Content\",\n    \"rules\": [\n        {\n            \"conditions\": [\n                {\n                    \"task\": \"Analyze Content\",\n                    \"parameter\": \"toxicity_score\",\n                    \"parameter_type\": \"FLOAT\",\n                    \"operator\": \"GREATER_THAN\",\n                    \"value\": \"0.7\"\n                }\n            ],\n            \"then_block\": \"Human Review\"\n        },\n        {\n            \"conditions\": [\n                {\n                    \"task\": \"Analyze Content\",\n                    \"parameter\": \"toxicity_score\",\n                    \"parameter_type\": \"FLOAT\",\n                    \"operator\": \"LESS_THAN\",\n                    \"value\": \"0.2\"\n                }\n            ],\n            \"then_block\": \"Publish Content\"\n        }\n    ],\n    \"dependencies\": [\"Analyze Content\"],\n    \"error_policy\": \"RAISE\"\n}\n</code></pre>"},{"location":"agent/tasks/conditional-task/#2-customer-support-triage","title":"2. Customer Support Triage","text":"<pre><code>{\n    \"name\": \"Triage Support Request\",\n    \"rules\": [\n        {\n            \"conditions\": [\n                {\n                    \"task\": \"Classify Request\",\n                    \"parameter\": \"priority\",\n                    \"parameter_type\": \"STRING\",\n                    \"operator\": \"EQUAL\",\n                    \"value\": \"high\"\n                }\n            ],\n            \"then_block\": \"Urgent Support\"\n        },\n        {\n            \"conditions\": [\n                {\n                    \"task\": \"Classify Request\",\n                    \"parameter\": \"category\",\n                    \"parameter_type\": \"STRING\",\n                    \"operator\": \"EQUAL\",\n                    \"value\": \"billing\"\n                }\n            ],\n            \"then_block\": \"Billing Department\"\n        }\n    ],\n    \"dependencies\": [\"Classify Request\"],\n    \"error_policy\": \"RAISE\"\n}\n</code></pre>"},{"location":"agent/tasks/conditional-task/#3-data-validation","title":"3. Data Validation","text":"<pre><code>{\n    \"name\": \"Validate Data\",\n    \"rules\": [\n        {\n            \"conditions\": [\n                {\n                    \"task\": \"Extract Data\",\n                    \"parameter\": \"records\",\n                    \"parameter_type\": \"ARRAY\",\n                    \"operator\": \"IS_EMPTY\"\n                }\n            ],\n            \"then_block\": \"Handle Empty Dataset\"\n        },\n        {\n            \"conditions\": [\n                {\n                    \"task\": \"Extract Data\",\n                    \"parameter\": \"validation_score\",\n                    \"parameter_type\": \"FLOAT\",\n                    \"operator\": \"LESS_THAN\",\n                    \"value\": \"0.8\"\n                }\n            ],\n            \"then_block\": \"Clean Data\"\n        }\n    ],\n    \"dependencies\": [\"Extract Data\"],\n    \"error_policy\": \"RAISE\"\n}\n</code></pre>"},{"location":"agent/tasks/conditional-task/#task-flow","title":"Task Flow","text":"<pre><code>graph TD\n    A[Previous Task] --&gt; B[Conditional Task]\n    B -- \"Rule 1 Matches\" --&gt; C[Task 1]\n    B -- \"Rule 2 Matches\" --&gt; D[Task 2]\n    B -- \"No Rules Match\" --&gt; E[END]\n\n    style A fill:#d4e6ff,stroke:#0066cc,color:#000000\n    style B fill:#ffd6d6,stroke:#cc0000,color:#000000\n    style C fill:#d6ffda,stroke:#009900,color:#000000\n    style D fill:#d6ffda,stroke:#009900,color:#000000\n    style E fill:#e0d6ff,stroke:#6600cc,color:#000000</code></pre>"},{"location":"agent/tasks/conditional-task/#flow-execution-logic","title":"Flow Execution Logic","text":"<ul> <li>Rules are evaluated in sequential order (top to bottom)</li> <li>The first rule with all conditions satisfied determines the execution path</li> <li>If multiple rules could match, only the first matching rule is executed</li> <li>If no rules match, the workflow proceeds to END unless a default path is configured</li> </ul>"},{"location":"agent/tasks/conditional-task/#error-policies","title":"Error Policies","text":"<p>The <code>error_policy</code> field defines how errors are handled during rule evaluation:</p> Policy Description RAISE Stop workflow execution and raise an error (default) RETRY Retry the condition evaluation after a delay SKIP Skip the failing condition and continue evaluation <pre><code>{\n    \"error_policy\": \"RETRY\",\n    \"retry_count\": 3,\n    \"retry_delay\": 5\n}\n</code></pre>"},{"location":"agent/tasks/conditional-task/#best-practices","title":"Best Practices","text":""},{"location":"agent/tasks/conditional-task/#1-rule-organization","title":"1. Rule Organization","text":"<p>\u2705 Do:</p> <ul> <li>Order rules from most specific to most general</li> <li>Group related conditions</li> <li>Use descriptive names for tasks and parameters</li> <li>Test rule evaluation with sample data</li> </ul> <p>\u274c Don't:</p> <ul> <li>Create overlapping rules without clear precedence</li> <li>Use complex nested conditions when simpler rules would work</li> <li>Add unnecessary conditions</li> <li>Create circular dependencies</li> </ul>"},{"location":"agent/tasks/conditional-task/#2-condition-design","title":"2. Condition Design","text":"<p>\u2705 Do:</p> <ul> <li>Use appropriate operators for each data type</li> <li>Validate input values</li> <li>Consider edge cases</li> <li>Keep conditions simple and clear</li> </ul> <p>\u274c Don't:</p> <ul> <li>Mix data types in comparisons</li> <li>Use hardcoded values that may change</li> <li>Create impossible conditions</li> <li>Overcomplicate conditions</li> </ul>"},{"location":"agent/tasks/conditional-task/#3-workflow-integration","title":"3. Workflow Integration","text":"<p>\u2705 Do:</p> <ul> <li>Ensure all referenced tasks exist in the workflow</li> <li>Verify parameter names and types</li> <li>Use clear task names for easy reference</li> <li>Document rule logic for other users</li> </ul> <p>\u274c Don't:</p> <ul> <li>Reference tasks outside the workflow</li> <li>Use parameters that may not exist</li> <li>Create dead-end paths</li> <li>Assume parameters will always have values</li> </ul>"},{"location":"agent/tasks/conditional-task/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"Issue Solution Rules Never Match Check condition values and operators Wrong Branch Selected Review rule order and specificity Missing Parameters Verify task dependencies and output structure Type Errors Ensure parameter values match expected data types Workflow Dead Ends Connect all possible branches to appropriate tasks Parameter Changed Update conditions if output parameter names change No Next Node Options Connect edges to destination nodes in the workflow"},{"location":"agent/tasks/conditional-task/#related-documentation","title":"Related Documentation","text":"<ul> <li>Assignment Rules</li> </ul>"},{"location":"agent/tasks/human-task/","title":"Human Task","text":""},{"location":"agent/tasks/human-task/#overview","title":"Overview","text":"<p>Human Tasks are designed for workflows that require human intervention, such as approvals, reviews, or decision-making. These tasks pause the workflow execution until human input is received.</p>"},{"location":"agent/tasks/human-task/#visual-example","title":"Visual Example","text":""},{"location":"agent/tasks/human-task/#configuration-structure","title":"Configuration Structure","text":"<pre><code>{\n    \"type\": \"HUMAN_TASK\",\n    \"block\": {\n        \"name\": \"Human Task Name\",\n        \"type\": \"HUMAN_TASK\",\n        \"instructions\": \"Based on the given message, categorize the message into APPROVED or REJECTED or UNDECIDED\",\n        \"dependencies\": [],\n        \"error_policy\": \"RAISE\",\n        \"assignment_type\": \"USER\", // Required: USER or TEAM\n        \"assignee_id\": \"user_id\", // Required: User ID or Team ID based on assignment_type\n        \"assignment_logic\": \"Round_Robin\" // Required only when assignment_type is TEAM\n    }\n}\n</code></pre>"},{"location":"agent/tasks/human-task/#required-fields","title":"Required Fields","text":"Field Type Description Required name string Task identifier Yes instructions string Task instructions Yes dependencies array Task dependencies No error_policy string Error handling strategy No"},{"location":"agent/tasks/human-task/#task-instructions","title":"Task Instructions","text":"<p>Human tasks require clear instructions for the assigned user or team. Instructions should:</p> <ul> <li>Be specific and clear</li> <li>Define expected actions</li> <li>Provide decision criteria</li> <li>Include any relevant context</li> </ul> <p>Example:</p> <pre><code>{\n    \"instructions\": \"Review the generated content for accuracy and alignment with brand guidelines. Choose APPROVE if content meets all criteria, REJECT if changes are needed, or UNDECIDED if further review is required.\"\n}\n</code></pre>"},{"location":"agent/tasks/human-task/#assignment-rules-required","title":"Assignment Rules (Required)","text":"<p>When creating a Human Task, you must configure an assignment rule to specify who will be responsible for completing the task. Without a valid assignment rule, you will not be able to create or update the workflow.</p>"},{"location":"agent/tasks/human-task/#assignment-configuration","title":"Assignment Configuration","text":"<pre><code>{\n    \"rule_type\": \"Human Feedback\",\n    \"assignment_type\": \"USER|TEAM\", // Required: Must be either USER or TEAM\n    \"assignee_id\": \"id\", // Required: User ID or Team ID based on assignment_type\n    \"assignment_logic\": \"Round_Robin|LRU\" // Required only when assignment_type is TEAM\n}\n</code></pre>"},{"location":"agent/tasks/human-task/#user-assignment","title":"User Assignment","text":"<p>When assigning to an individual user, select \"USER\" as the assignment type and choose from the dropdown list of users in your organization.</p> <pre><code>{\n    \"rule_type\": \"Human Feedback\",\n    \"assignment_type\": \"USER\",\n    \"assignee_id\": \"user_id\" // Selected from organization user list\n}\n</code></pre>"},{"location":"agent/tasks/human-task/#team-assignment","title":"Team Assignment","text":"<p>When assigning to a team, select \"TEAM\" as the assignment type, choose a team from the dropdown list, and specify an assignment logic.</p> <pre><code>{\n    \"rule_type\": \"Human Feedback\",\n    \"assignment_type\": \"TEAM\",\n    \"assignee_id\": \"team_id\", // Selected from organization team list\n    \"assignment_logic\": \"Round_Robin\" // Must specify either Round_Robin or LRU\n}\n</code></pre>"},{"location":"agent/tasks/human-task/#assignment-logic-options","title":"Assignment Logic Options","text":"<ul> <li>Round_Robin: Distributes tasks evenly among team members in a circular sequence</li> <li>LRU (Least Recently Used): Assigns task to the team member who has not been assigned a task for the longest time</li> </ul> <p>Important Note: If assignment rule conditions are not properly configured, you will not be able to create or update the workflow. All required fields must be completed with valid values.</p>"},{"location":"agent/tasks/human-task/#common-use-cases","title":"Common Use Cases","text":""},{"location":"agent/tasks/human-task/#1-document-approval","title":"1. Document Approval","text":"<pre><code>{\n    \"name\": \"Review Document\",\n    \"instructions\": \"Review the attached document and approve or reject based on compliance guidelines\",\n    \"dependencies\": [\"Generate Document\"]\n}\n</code></pre>"},{"location":"agent/tasks/human-task/#2-content-review","title":"2. Content Review","text":"<pre><code>{\n    \"name\": \"Review Content\",\n    \"instructions\": \"Review the AI-generated content for accuracy and brand voice. Provide feedback if changes are needed.\",\n    \"dependencies\": [\"Generate Content\"]\n}\n</code></pre>"},{"location":"agent/tasks/human-task/#3-decision-making","title":"3. Decision Making","text":"<pre><code>{\n    \"name\": \"Process Decision\",\n    \"instructions\": \"Review the analysis results and decide on the next steps. Choose APPROVE to proceed or REJECT to revise.\",\n    \"dependencies\": [\"Analyze Data\"]\n}\n</code></pre>"},{"location":"agent/tasks/human-task/#task-flow","title":"Task Flow","text":"<pre><code>graph TD\n    A[Previous Task] --&gt; B[Human Task]\n    B -- Approved --&gt; C[Next Task]\n    B -- Rejected --&gt; D[Revision Task]\n    B -- Undecided --&gt; E[Additional Review]</code></pre>"},{"location":"agent/tasks/human-task/#response-types","title":"Response Types","text":"<p>Human tasks can have three possible responses:</p> <ol> <li>APPROVED: Task approved, workflow continues</li> <li>REJECTED: Task rejected, requires revision</li> <li>UNDECIDED: Additional review needed</li> </ol>"},{"location":"agent/tasks/human-task/#best-practices","title":"Best Practices","text":""},{"location":"agent/tasks/human-task/#1-instructions","title":"1. Instructions","text":"<p>\u2705 Do:</p> <ul> <li>Write clear, concise instructions</li> <li>Specify decision criteria</li> <li>Include relevant context</li> <li>Define expected outcomes</li> </ul> <p>\u274c Don't:</p> <ul> <li>Use technical jargon</li> <li>Write vague instructions</li> <li>Omit important details</li> <li>Assume knowledge</li> </ul>"},{"location":"agent/tasks/human-task/#2-assignment-rules","title":"2. Assignment Rules","text":"<p>\u2705 Do:</p> <ul> <li>Set appropriate assignees</li> <li>Configure backup assignments</li> <li>Use team assignments for shared tasks</li> <li>Set reasonable deadlines</li> <li>Verify all required fields are completed</li> </ul> <p>\u274c Don't:</p> <ul> <li>Assign to inactive users</li> <li>Skip backup assignments</li> <li>Ignore time zones</li> <li>Use overly complex rules</li> <li>Leave assignment rules incomplete</li> </ul>"},{"location":"agent/tasks/human-task/#3-dependencies","title":"3. Dependencies","text":"<p>\u2705 Do:</p> <ul> <li>Clearly define prerequisites</li> <li>Verify data availability</li> <li>Set proper task order</li> <li>Handle all outcomes</li> </ul> <p>\u274c Don't:</p> <ul> <li>Create circular dependencies</li> <li>Skip validation</li> <li>Ignore error cases</li> </ul>"},{"location":"agent/tasks/human-task/#error-handling","title":"Error Handling","text":""},{"location":"agent/tasks/human-task/#configuration","title":"Configuration","text":"<pre><code>{\n    \"error_policy\": \"RAISE\",\n    \"notification_channels\": [\"email\", \"slack\"],\n    \"escalation_after\": 24 // hours\n}\n</code></pre>"},{"location":"agent/tasks/human-task/#common-scenarios","title":"Common Scenarios","text":"<ol> <li> <p>Timeout</p> <ul> <li>Task not completed within deadline</li> <li>Automatic escalation</li> </ul> </li> <li> <p>Assignee Unavailable</p> <ul> <li>Automatic reassignment</li> <li>Backup assignee notification</li> </ul> </li> <li> <p>Invalid Response</p> <ul> <li>Validation error</li> <li>Request for correction</li> </ul> </li> </ol>"},{"location":"agent/tasks/human-task/#integration-examples","title":"Integration Examples","text":""},{"location":"agent/tasks/human-task/#with-ai-task","title":"With AI Task","text":"<pre><code>{\n    \"name\": \"Review AI Output\",\n    \"instructions\": \"Review the AI-generated content for accuracy\",\n    \"dependencies\": [\"Generate AI Content\"]\n}\n</code></pre>"},{"location":"agent/tasks/human-task/#with-app-task","title":"With App Task","text":"<pre><code>{\n    \"name\": \"Approve Document\",\n    \"instructions\": \"Review and approve the generated document\",\n    \"dependencies\": [\"Generate PDF\"]\n}\n</code></pre>"},{"location":"agent/tasks/human-task/#notifications","title":"Notifications","text":""},{"location":"agent/tasks/human-task/#assignment-notification","title":"Assignment Notification","text":"<pre><code>{\n    \"channel\": \"email\",\n    \"template\": \"task_assignment\",\n    \"data\": {\n        \"task_name\": \"Document Review\",\n        \"instructions\": \"...\",\n        \"deadline\": \"2024-02-24T15:00:00Z\"\n    }\n}\n</code></pre>"},{"location":"agent/tasks/human-task/#reminder-notification","title":"Reminder Notification","text":"<pre><code>{\n    \"channel\": \"slack\",\n    \"template\": \"task_reminder\",\n    \"data\": {\n        \"task_name\": \"Content Review\",\n        \"time_remaining\": \"2 hours\"\n    }\n}\n</code></pre>"},{"location":"agent/tasks/human-task/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"Issue Solution Missed Deadlines Set up reminders and escalations Unclear Instructions Review and clarify task requirements Assignment Conflicts Configure backup assignments Response Delays Implement notification system Invalid Assignment Rules Ensure all required fields are properly filled"},{"location":"agent/tasks/human-task/#related-documentation","title":"Related Documentation","text":"<p>-Assignment Rules</p>"},{"location":"agent/tasks/overview/","title":"Task Types Overview","text":""},{"location":"agent/tasks/overview/#introduction","title":"Introduction","text":"<p>Tasks are the building blocks of your workflow agent. Each task type serves a specific purpose and has its own configuration requirements.</p>"},{"location":"agent/tasks/overview/#available-task-types","title":"Available Task Types","text":""},{"location":"agent/tasks/overview/#ai-task","title":"AI Task","text":"<p>Purpose: Execute AI-driven operations for intelligent processing.</p> <p>Use Cases:</p> <ul> <li>Text analysis</li> <li>Content generation</li> <li>Data classification</li> <li>Pattern recognition</li> </ul> <p>Learn</p> <p>More about AI Tasks \u2192</p>"},{"location":"agent/tasks/overview/#human-task","title":"Human Task","text":"<p>Purpose: Enable human intervention in workflows.</p> <p>Use Cases:</p> <ul> <li>Document approval</li> <li>Content review</li> <li>Decision making</li> <li>Quality validation</li> </ul> <p>Learn</p> <p>More about Human Tasks \u2192</p>"},{"location":"agent/tasks/overview/#app-task","title":"App Task","text":"<p>Purpose: Integrate with external tools and applications.</p> <p>Use Cases:</p> <ul> <li>Data processing</li> <li>File operations</li> <li>API integrations</li> <li>Tool automation</li> </ul> <p>Learn</p> <p>More about App Tasks \u2192</p>"},{"location":"agent/tasks/overview/#coder-task","title":"Coder Task","text":"<p>Purpose: Execute custom code artifacts.</p> <p>Use Cases:</p> <ul> <li>Custom calculations</li> <li>Data transformation</li> <li>Complex logic implementation</li> <li>Script execution</li> </ul> <p>Learn</p> <p>More about Coder Tasks \u2192</p>"},{"location":"agent/tasks/overview/#task-configuration-basics","title":"Task Configuration Basics","text":"<p>All tasks share some common configuration elements:</p> <pre><code>{\n    \"name\": \"Task Name\",\n    \"description\": \"Task description\",\n    \"type\": \"TASK_TYPE\",\n    \"error_policy\": \"RAISE\"\n}\n</code></pre>"},{"location":"agent/tasks/overview/#common-elements","title":"Common Elements","text":"Element Description Required name Unique task identifier Yes description Task purpose and functionality Yes type Task type identifier Yes error_policy Error handling strategy No"},{"location":"chat/","title":"Chat System Overview","text":"<p>The chat system provides a RESTful API for managing conversations and messages. It's designed to handle normal conversations and workflow-based conversations through a simple API interface.</p>"},{"location":"chat/#core-components","title":"Core Components","text":""},{"location":"chat/#1-conversations","title":"1. Conversations","text":"<ul> <li>Create and manage chat sessions</li> <li>Associate conversations with specific workflows</li> <li>Support different usecases<ul> <li><code>DEFAULT</code>: Simple chat conversation</li> <li><code>WORKFLOW_EXECUTION</code>: To trigger a workflow</li> </ul> </li> <li>Track conversation metadata and state</li> </ul>"},{"location":"chat/#2-messages","title":"2. Messages","text":"<ul> <li>Send and receive messages within conversations</li> <li>Support text content, media content</li> <li>Track message status and metadata</li> <li>Associate messages with conversations</li> </ul>"},{"location":"chat/#typical-flow-diagram","title":"Typical Flow Diagram","text":"<pre><code>sequenceDiagram\n    participant Client\n    participant API\n    participant Engine\n\n    Client-&gt;&gt;API: Create Conversation (with workflow_id)\n    API-&gt;&gt;Engine: Initialize Agent\n    API--&gt;&gt;Client: Return conversation_id\n\n    Client-&gt;&gt;API: Send Message (with conversation_id)\n    API-&gt;&gt;Engine: Process message\n    Engine--&gt;&gt;API: Generate response\n    API--&gt;&gt;Client: Return generated response\n\n    Client-&gt;&gt;API: Get Conversation Messages\n    API--&gt;&gt;Client: Return message history</code></pre>"},{"location":"chat/#key-features","title":"Key Features","text":"<ol> <li> <p>Workflow Integration</p> <ul> <li>Each conversation can be linked to a specific workflow</li> <li>Supports workflow execution</li> <li>Automatic workflow state management</li> </ul> </li> <li> <p>Message Handling</p> <ul> <li>Synchronous message processing</li> <li>Message status tracking</li> <li>Support for metadata</li> </ul> </li> <li> <p>Error Handling</p> <ul> <li>Consistent error responses</li> <li>Clear status codes</li> <li>Detailed error messages</li> </ul> </li> <li> <p>Webhook Integration</p> <ul> <li>Real-time callback for message events</li> <li>Detailed message information in webhook payload</li> <li>Supports different webhook handlers</li> </ul> </li> </ol>"},{"location":"chat/conversations/","title":"Conversations","text":"<p>Conversations represent chat sessions in the system. Each conversation is associated with a workflow and can contain multiple messages.</p>"},{"location":"chat/conversations/#create-a-conversation","title":"Create a Conversation","text":"<p>Create a new conversation instance.</p> <ul> <li>Endpoint: <code>POST /conversations</code></li> <li>Authentication: API Key Required</li> </ul>"},{"location":"chat/conversations/#headers","title":"Headers","text":"<pre><code>Authorization: Bearer {{API_KEY}}\nContent-Type: application/json\n</code></pre>"},{"location":"chat/conversations/#conversation-usecases","title":"Conversation Usecases","text":"<p>The <code>usecase</code> field determines the conversation's purpose and behavior:</p> <ol> <li> <p>DEFAULT (<code>\"usecase\": \"DEFAULT\"</code>)</p> <ul> <li>Standard conversation, chat with the GAIFE system</li> <li>Used for general messaging purposes</li> </ul> </li> <li> <p>WORKFLOW_EXECUTION (<code>\"usecase\": \"WORKFLOW_EXECUTION\"</code>)</p> <ul> <li>Used when executing an existing workflow</li> <li>Automatically sets metadata with <code>workflow_id</code> from config</li> <li>Enables workflow-specific message processing</li> </ul> </li> </ol> <p>Info</p> <p>Optionally, configure a <code>callback_url</code> in <code>config</code> to receive a webhook/callback on every message of conversation.</p>"},{"location":"chat/conversations/#request-body","title":"Request Body","text":"<pre><code>{\n    \"channel\": \"API\",\n    \"usecase\": \"WORKFLOW_EXECUTION\", // One of: DEFAULT, WORKFLOW_EXECUTION\n    \"config\": {\n        \"workflow_id\": \"string\", // Required, the ID of the workflow to execute\n        \"callback_url\": \"string\" // To receive a webhook on every message of conversation\n        // Additional configuration\n    },\n    \"metadata\": {\n        // Optional custom data\n    },\n    \"team_id\": \"integer\" // Optional\n}\n</code></pre>"},{"location":"chat/conversations/#response","title":"Response","text":"<pre><code>{\n    \"id\": \"string\" // conversation ID without hyphens\n}\n</code></pre>"},{"location":"chat/conversations/#example-usecases-request-body","title":"Example Usecases Request Body","text":"Workflow ExecutionDefault <pre><code>{\n    \"channel\": \"API\",\n    \"usecase\": \"WORKFLOW_EXECUTION\",\n    \"config\": {\n        \"workflow_id\": \"123\",\n        \"callback_url\": \"https://example.com/webhook\"\n    }\n}\n</code></pre> <pre><code>{\n    \"channel\": \"API\",\n    \"usecase\": \"DEFAULT\",\n    \"config\": {\n        \"callback_url\": \"https://example.com/webhook\"\n    }\n}\n</code></pre>"},{"location":"chat/conversations/#notes","title":"Notes","text":"<ul> <li>For <code>WORKFLOW_EXECUTION</code>, the metadata will automatically include the workflow_id from config</li> <li>The <code>DEFAULT</code> usecase provides the most flexibility for custom implementations</li> <li>All usecases support custom metadata for additional context</li> <li>The <code>channel</code> field is used to specify the communication channel, currently only <code>API</code> is supported</li> <li>To receive a webhook on every message of conversation, configure a <code>callback_url</code> in <code>config</code></li> </ul>"},{"location":"chat/conversations/#example-request","title":"Example Request","text":"<pre><code>curl 'https://beta-api.gaife.com/developer/api/conversations' \\\n  -H 'Authorization: Bearer {{API_KEY}}' \\\n  -H 'Content-Type: application/json' \\\n  --data-raw '{\n    \"channel\":\"API\",\n    \"usecase\":\"WORKFLOW_EXECUTION\",\n    \"config\":{\n      \"workflow_id\":\"84\",\n      \"callback_url\":\"https://example.com/webhook\"\n    }\n  }'\n</code></pre>"},{"location":"chat/conversations/#example-response","title":"Example Response","text":"<pre><code>{\n    \"id\": \"550e8400e29b41d4a716446655440000\"\n}\n</code></pre>"},{"location":"chat/conversations/#status-codes","title":"Status Codes","text":"<ul> <li><code>201</code>: Conversation created successfully</li> <li><code>400</code>: Invalid request data</li> <li><code>401</code>: Invalid or missing API key</li> <li><code>500</code>: Server error</li> </ul>"},{"location":"chat/conversations/#get-conversation-messages","title":"Get Conversation Messages","text":"<p>Retrieve all messages in a conversation.</p> <ul> <li>Endpoint: <code>GET /conversations/{conversation_id}/messages</code></li> <li>Authentication: Required</li> </ul>"},{"location":"chat/conversations/#path-parameters","title":"Path Parameters","text":"<ul> <li><code>conversation_id</code>: The ID of the conversation</li> </ul>"},{"location":"chat/conversations/#example-request_1","title":"Example Request","text":"<pre><code>curl 'https://beta-api.gaife.com/developer/api/conversations/550e8400e29b41d4a716446655440000/messages' \\\n  -H 'Authorization: Bearer {{API_KEY}}' \\\n  -H 'Content-Type: application/json'\n</code></pre>"},{"location":"chat/conversations/#response_1","title":"Response","text":"<ul> <li>Messages are returned in chronological order, from newest to oldest.</li> </ul> <pre><code>[\n    {\n        \"id\": \"string\",\n        \"conversation_id\": \"string\",\n        \"content\": \"string\",\n        \"content_type\": \"TEXT\", // One of: TEXT, IMAGE, VIDEO, AUDIO, etc.\n        \"filename\": \"string\", // Optional, present for media messages\n        \"type\": \"USER_INPUT\", // Message type\n        \"channel\": \"string\", // Communication channel\n        \"status\": \"RECEIVED\", // Message status\n        \"metadata\": {\n            \"key\": \"value\" // Optional custom metadata\n        },\n        \"created_by\": \"string\",\n        \"created_at\": \"datetime\",\n        \"updated_at\": \"datetime\"\n    }\n]\n</code></pre>"},{"location":"chat/conversations/#status-codes_1","title":"Status Codes","text":"<ul> <li><code>200</code>: Success</li> <li><code>404</code>: Conversation not found</li> <li><code>500</code>: Server error</li> </ul>"},{"location":"chat/conversations/#notes_1","title":"Notes","text":"<ol> <li> <p>Content Types:</p> <ul> <li><code>TEXT</code>: Regular text messages</li> <li><code>IMAGE</code>: Image files</li> <li><code>VIDEO</code>: Video files</li> <li><code>AUDIO</code>: Audio files</li> </ul> </li> <li> <p>Message Types:</p> <ul> <li><code>USER_INPUT</code>: Messages from users</li> <li>Other types as per your MessageType choices</li> </ul> </li> <li> <p>Message Status:</p> <ul> <li><code>RECEIVED</code>: Message has been received</li> <li>Other statuses as per your MessageStatus choices</li> </ul> </li> <li> <p>Response Fields:</p> <ul> <li><code>id</code>: Unique message identifier</li> <li><code>content</code>: Message content/text</li> <li><code>filename</code>: Present only for media messages</li> <li><code>metadata</code>: Optional JSON object for additional data</li> </ul> </li> </ol>"},{"location":"chat/message/","title":"Messages","text":"<p>Messages are individual communications within a conversation. Each message can contain text or media content and maintains metadata about its creation and status.</p>"},{"location":"chat/message/#send-message","title":"Send Message","text":"<p>Send a new message in a conversation.</p> <ul> <li>Endpoint: <code>POST /messages</code></li> <li>Authentication: API Key Required</li> </ul>"},{"location":"chat/message/#headers","title":"Headers","text":"<pre><code>Authorization: Bearer {{API_KEY}}\nContent-Type: application/json\n</code></pre>"},{"location":"chat/message/#message-types","title":"Message Types","text":"<p>The <code>content_type</code> field determines the message format and required fields:</p> <ol> <li> <p>TEXT (<code>\"content_type\": \"text\"</code>)</p> <ul> <li>Basic text messages</li> <li>Requires <code>content</code> field</li> <li>No file handling needed</li> </ul> </li> <li> <p>MEDIA (<code>audio/*, image/*, application/pdf, etc.</code>)</p> <ul> <li>Used for file attachments</li> <li>Requires <code>filename</code> field</li> <li>Must obtain pre-signed URL before upload</li> <li>Supports various formats (audio, image, PDF, XLSX, CSV)</li> <li>More detail below Media Handling</li> </ul> </li> </ol>"},{"location":"chat/message/#request-body","title":"Request Body","text":"Field Type Required Description conversation string Yes ID of the conversation content string Conditional Message text (required for text messages) content_type string Yes Message format (see Supported Types) filename string Conditional File path/name (required for media) metadata object No Custom message data channel string No Defaults to \"api\""},{"location":"chat/message/#example-text-message","title":"Example: Text Message","text":"<pre><code>{\n    \"conversation\": \"550e8400e29b41d4a716446655440000\",\n    \"content\": \"Hello world!\",\n    \"content_type\": \"text\",\n    \"metadata\": {\n        // Optional metadata\n    }\n}\n</code></pre>"},{"location":"chat/message/#example-media-message","title":"Example: Media Message","text":"<pre><code>{\n    \"conversation\": \"550e8400e29b41d4a716446655440000\",\n    \"filename\": \"20240321_120000_report.pdf\",\n    \"content_type\": \"application/pdf\",\n    \"metadata\": {\n        // Optional metadata\n    }\n}\n</code></pre>"},{"location":"chat/message/#response","title":"Response","text":"<pre><code>{\n    \"id\": \"550e8400e29b41d4a716446655440000\",\n    \"conversation\": \"550e8400e29b41d4a716446655440000\",\n    \"content\": \"Hello world!\",\n    \"content_type\": \"text\",\n    \"channel\": \"api\",\n    \"type\": \"USER_INPUT\",\n    \"status\": \"received\",\n    \"metadata\": {\n        // Additional metadata\n    },\n    \"created_at\": \"2024-03-21T10:00:00Z\",\n    \"updated_at\": \"2024-03-21T10:00:00Z\"\n}\n</code></pre>"},{"location":"chat/message/#supported-content-types","title":"Supported Content Types","text":"Type Content Type Required Fields Max Size Description Text text content 4KB Plain text messages Audio audio/* filename 10MB Voice messages, audio files Image image/* filename 5MB Photos and images PDF application/pdf filename 10MB PDF documents Excel application/xlsx filename 10MB Excel spreadsheets CSV text/csv filename 5MB CSV data files"},{"location":"chat/message/#status-codes","title":"Status Codes","text":"<ul> <li><code>200</code>: Message sent successfully</li> <li><code>400</code>: Validation error</li> <li><code>401</code>: Invalid or missing API key</li> <li><code>422</code>: Missing organization ID</li> <li><code>500</code>: Server error</li> </ul>"},{"location":"chat/message/#example-request","title":"Example Request","text":"<pre><code>curl 'https://beta-api.gaife.com/developer/api/messages' \\\n  -H 'Authorization: Bearer {{API_KEY}}' \\\n  -H 'Content-Type: application/json' \\\n  --data-raw '{\"conversation\":\"550e8400e29b41d4a716446655440000\",\"content\":\"Hello world!\",\"content_type\":\"text\"}'\n</code></pre>"},{"location":"chat/message/#notes","title":"Notes","text":"<ol> <li> <p>File Uploads:</p> <ul> <li>Obtain pre-signed URL before uploading media</li> <li>Use appropriate content type headers</li> <li>Respect file size limits</li> </ul> </li> <li> <p>Message Processing:</p> <ul> <li>Messages are processed asynchronously</li> <li>Check message status for delivery confirmation</li> <li>All timestamps are in UTC</li> </ul> </li> <li> <p>Metadata Usage:</p> <ul> <li>Use metadata for custom tracking</li> <li>Metadata must be valid JSON</li> <li>Maximum metadata size: 4KB</li> </ul> </li> <li> <p>Rate Limits:</p> <ul> <li>100 messages per minute per organization</li> <li>Larger limits available for enterprise plans</li> </ul> </li> </ol>"},{"location":"chat/message/#media-handling","title":"Media Handling","text":"<p>For sending media messages (images, audio, PDFs, etc.), you'll need to follow a three-step process:</p>"},{"location":"chat/message/#step-1-get-pre-signed-url","title":"Step 1: Get Pre-signed URL","text":"<p>Endpoint: <code>POST /media/presigned-url</code></p> <p>Headers:</p> <pre><code>Authorization: Bearer {{API_KEY}}\nContent-Type: application/json\n</code></pre> <p>Request Body:</p> <pre><code>{\n    \"file_name\": \"report.pdf\",\n    \"file_type\": \"application/pdf\"\n}\n</code></pre> <p>Response:</p> <pre><code>{\n    // The URL to upload the file\n    \"presigned_url\": \"https://s3.amazonaws.com/bucket/...\",\n    // The file name will be used to send the message\n    \"file_name\": \"20240321_120000_report.pdf\"\n}\n</code></pre> <p>Curl Example:</p> <pre><code>curl -X POST 'https://beta-api.gaife.com/developer/api/media/presigned-url' \\\n  -H 'Authorization: Bearer {{API_KEY}}' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"file_name\": \"report.pdf\",\n    \"file_type\": \"application/pdf\"\n}'\n</code></pre>"},{"location":"chat/message/#step-2-upload-file","title":"Step 2: Upload File","text":"<p>Use the pre-signed URL to upload your file:</p> <pre><code>curl --location --request PUT \"${PRESIGNED_URL}\" \\ # The URL received from Step 1\n    --header \"Content-Type: application/octet-stream\" \\\n    --data-binary \"@/path/to/your/file\"\n</code></pre> <p>Note: Replace <code>${PRESIGNED_URL}</code> with the URL received from Step 1, and adjust the file path to your local file location.</p>"},{"location":"chat/message/#step-3-send-message","title":"Step 3: Send Message","text":"<p>After successful upload, send the message:</p> <pre><code>{\n    \"conversation\": \"550e8400e29b41d4a716446655440000\",\n    // Use the file name received from Step 1\n    \"filename\": \"20240321_120000_report.pdf\",\n    \"content_type\": \"application/pdf\",\n    \"metadata\": {\n        // Optional metadata\n    }\n}\n</code></pre> <p>Curl Example:</p> <pre><code>curl --location 'https://beta-api.gaife.com/developer/api/messages' \\\n    --header 'Authorization: Bearer {{API_KEY}}' \\\n    --header 'Content-Type: application/json' \\\n    --data '{\n        \"conversation\": \"550e8400e29b41d4a716446655440000\",\n        \"content_type\": \"image/jpeg\",\n        \"filename\": \"20240321_120000_image.jpg\",\n    }'\n</code></pre>"},{"location":"chat/message/#supported-file-types","title":"Supported File Types","text":"File Type Content Type Storage Folder Audio audio/* audio/ Image image/* images/ PDF application/pdf pdfs/ Excel application/xlsx xlsx/ CSV text/csv csv/"},{"location":"chat/message/#complete-example","title":"Complete Example","text":"<pre><code>import requests\n\n# 1. Get pre-signed URL\npresigned_response = requests.post(\n    'https://api.example.com/media/presigned-url',\n    headers={\n        'Authorization': 'Bearer your_api_key',\n        'Content-Type': 'application/json'\n    },\n    json={\n        'file_name': 'report.pdf',\n        'file_type': 'application/pdf'\n    }\n)\npresigned_data = presigned_response.json()\n\n# 2. Upload file using pre-signed URL\nwith open('report.pdf', 'rb') as f:\n    requests.put(\n        presigned_data['presigned_url'],\n        data=f,\n        headers={'Content-Type': 'application/pdf'}\n    )\n\n# 3. Send message with file reference\nmessage_response = requests.post(\n    'https://api.example.com/messages',\n    headers={\n        'Authorization': 'Bearer your_api_key',\n        'Content-Type': 'application/json'\n    },\n    json={\n        'conversation': '550e8400e29b41d4a716446655440000',\n        'filename': presigned_data['file_name'],\n        'content_type': 'application/pdf'\n    }\n)\n</code></pre>"},{"location":"chat/message/#media-upload-notes","title":"Media Upload Notes","text":"<ol> <li> <p>File Naming:</p> <ul> <li>Uploaded files are automatically prefixed with timestamp</li> <li>Format: <code>YYYYMMDD_HHMMSS_original_filename</code></li> </ul> </li> <li> <p>Storage Organization:</p> <ul> <li>Files are stored in type-specific folders</li> <li>Each organization has its own directory</li> <li>Maintains clean separation of different file types</li> </ul> </li> <li> <p>Limitations:</p> <ul> <li>Text files are not supported for pre-signed URLs</li> <li>Pre-signed URLs expire after 15 minutes</li> <li>File type must match the declared content type</li> </ul> </li> <li> <p>Error Cases:</p> <ul> <li><code>422</code>: Missing organization ID</li> <li><code>400</code>: Invalid file type or unsupported operation</li> <li><code>500</code>: Server error during URL generation</li> </ul> </li> </ol>"},{"location":"chat/message/#message-metadata","title":"Message Metadata","text":"<p>The <code>metadata</code> field in messages serves several critical functions:</p> <ol> <li> <p>File Storage Information</p> <ul> <li>Tracks file storage details for system generated files</li> <li>Used when system generates a file response</li> <li>System automatically processes the file:<ul> <li>Extracts bucket and path information</li> <li>Transfers file to conversation media bucket</li> <li>Updates message with standardized S3 URI</li> </ul> </li> <li>Supports both HTTPS and S3 protocol URLs</li> <li>File access requires proper authentication</li> <li>Example message metadata:     <pre><code>// Original metadata from AI Engine\n{\n    \"metadata\": {\n        \"from_s3\": true,\n        \"output\": {\n            \"s3_url\": \"https://bucket.s3.amazonaws.com/file.pdf\",\n            \"output_type\": \"application/pdf\"\n        }\n    }\n}\n</code></pre></li> </ul> </li> <li> <p>Workflow Instance Status</p> <pre><code>{\n    \"metadata\": {\n        \"workflow_instance_id\": \"789\",\n        \"workflow_instance_status\": \"RUNNING\"\n    }\n}\n</code></pre> <p>The metadata tracks workflow execution state through the <code>workflow_instance_status</code> field:</p> <p>Available Status Values</p> Status Description <code>RUNNING</code> Workflow is actively executing tasks <code>PAUSED</code> Workflow execution has been temporarily suspended <code>COMPLETED</code> All tasks have successfully finished <code>FAILED</code> Workflow stopped due to an error <code>CANCELLED</code> Workflow was manually cancelled by user <code>TERMINATED</code> Workflow stopped due to system intervention <p>Example Status Updates</p> Initial workflow startWorkflow paused for user inputWorkflow completion <pre><code>{\n    \"metadata\": {\n        \"workflow_instance_id\": \"789\",\n        \"workflow_instance_status\": \"RUNNING\"\n    }\n}\n</code></pre> <pre><code>{\n    \"metadata\": {\n        \"workflow_instance_id\": \"789\",\n        \"workflow_instance_status\": \"PAUSED\"\n    }\n}\n</code></pre> <pre><code>{\n    \"metadata\": {\n        \"workflow_instance_id\": \"789\",\n        \"workflow_instance_status\": \"COMPLETED\"\n    }\n}\n</code></pre> <p>Status Transitions</p> <ul> <li><code>RUNNING</code> \u2192 Any status</li> <li><code>PAUSED</code> \u2192 <code>RUNNING</code>, <code>CANCELLED</code>, <code>TERMINATED</code></li> <li><code>COMPLETED</code> (Terminal state)</li> <li><code>FAILED</code> (Terminal state)</li> <li><code>CANCELLED</code> (Terminal state)</li> <li><code>TERMINATED</code> (Terminal state)</li> </ul> <p>Important Notes</p> <ul> <li>Status updates are real-time</li> <li>Terminal states cannot transition to other states</li> <li>Each status update includes timestamp information</li> <li>Status changes may trigger notifications or webhook events</li> <li>Historical status changes are preserved in workflow logs</li> </ul> </li> <li> <p>Ticket Integration</p> <pre><code>{\n    \"ticket_id\": \"123\",\n    \"task_instance_status\": \"EXECUTED\"\n}\n</code></pre> <p>The metadata contains ticket information that automatically manages support ticket lifecycles:</p> <p>Status Management</p> <ul> <li>Ticket status is automatically updated based on task instance status:     <pre><code>ERRORED, CANCELLED, REJECTED \u2192 CLOSED\nEXECUTED \u2192 RESOLVED\n</code></pre></li> <li>Updates are handled atomically to prevent race conditions</li> <li>Status changes are tracked in ticket history</li> </ul> <p>Ticket Fields Important ticket information tracked:</p> <pre><code>{\n    \"workflow_instance_id\": \"789\",\n    \"failed_task_id\": \"456\",\n    \"exception_message\": \"Error details\",\n    \"workflow_name\": \"Document Processing\",\n    \"task_name\": \"PDF Generation\",\n    \"workflow_progress\": 75.5,\n    \"conversation_id\": \"conv_123\"\n}\n</code></pre> <p>Example Metadata Usage</p> <pre><code>{\n    \"metadata\": {\n        \"ticket_id\": \"123\",\n        \"task_instance_status\": \"EXECUTED\",\n        \"workflow_instance_id\": \"789\",\n        \"task_name\": \"Document Processing\",\n        \"workflow_progress\": 85.5\n    }\n}\n</code></pre> <p>Notification System When tickets are created or updated:</p> <ul> <li>Assignees receive email notifications</li> <li>Notifications include:<ul> <li>Ticket ID</li> <li>Task name and description</li> <li>Workflow name</li> <li>Exception details (if any)</li> <li>Assignment details</li> </ul> </li> </ul> <p>Important Notes</p> <ul> <li>Ticket updates are processed atomically using database transactions</li> <li>Missing ticket IDs are safely ignored</li> <li>Status updates are immediate and automatic</li> <li>All ticket activities are logged for audit purposes</li> </ul> </li> </ol>"},{"location":"chat/message/#example-message-with-complex-metadata","title":"Example Message with Complex Metadata","text":"<pre><code>{\n    \"conversation\": \"550e8400e29b41d4a716446655440000\",\n    \"content\": \"Processing your document...\",\n    \"content_type\": \"text\",\n    \"metadata\": {\n        \"from_s3\": true,\n        \"output\": {\n            \"s3_url\": \"s3://bucket/org123/documents/20240321_120000_report.pdf\",\n            \"output_type\": \"application/pdf\"\n        },\n        \"workflow_instance_id\": \"789\",\n        \"workflow_instance_status\": \"RUNNING\",\n        \"ticket_id\": \"244\",\n        \"task_instance_status\": \"EXECUTED\"\n    }\n}\n</code></pre>"},{"location":"chat/webhooks/","title":"Webhook Integration Guide","text":""},{"location":"chat/webhooks/#overview","title":"Overview","text":"<p>Our webhook system enables real-time notifications for message events in your conversations. When a message is created or processed in your conversation, our system sends HTTP POST requests to your configured webhook URL with detailed message information.</p>"},{"location":"chat/webhooks/#quick-start","title":"Quick Start","text":""},{"location":"chat/webhooks/#1-configure-webhook","title":"1. Configure Webhook","text":"<p>Add a webhook URL to your conversation configuration:</p> <pre><code>{\n    \"channel\": \"API\",\n    \"usecase\": \"WORKFLOW_EXECUTION\",\n    \"config\": {\n        \"workflow_id\": \"123\",\n        \"callback_url\": \"https://your-domain.com/webhook\" // Required\n    }\n}\n</code></pre>"},{"location":"chat/webhooks/#2-implement-webhook-handler","title":"2. Implement Webhook Handler","text":"DjangoFastAPIFlaskExpress.jsSpring BootPHP <pre><code>from django.http import HttpResponse\nfrom django.views.decorators.csrf import csrf_exempt\nimport json\n\n@csrf_exempt\ndef webhook_handler(request):\n    try:\n        payload = json.loads(request.body)\n        # Process payload asynchronously\n        process_webhook.delay(payload)\n        return HttpResponse(status=200)\n    except Exception as e:\n        logger.error(f\"Webhook processing error: {str(e)}\")\n        return HttpResponse(status=200)  # Always acknowledge receipt\n</code></pre> <pre><code>from fastapi import FastAPI, Request\nfrom fastapi.responses import JSONResponse\n\napp = FastAPI()\n\n@app.post(\"/webhook\")\nasync def webhook_handler(request: Request):\n    try:\n        payload = await request.json()\n        # Process payload asynchronously\n        process_webhook.delay(payload)\n        return JSONResponse(status_code=200)\n    except Exception as e:\n        logger.error(f\"Webhook processing error: {str(e)}\")\n        return JSONResponse(status_code=200)\n</code></pre> <pre><code>from flask import Flask, request\n\napp = Flask(__name__)\n\n@app.route('/webhook', methods=['POST'])\ndef webhook_handler():\n    try:\n        payload = request.get_json()\n        # Process payload asynchronously\n        process_webhook.delay(payload)\n        return '', 200\n    except Exception as e:\n        logger.error(f\"Webhook processing error: {str(e)}\")\n        return '', 200\n</code></pre> <pre><code>const express = require('express');\nconst app = express();\n\napp.post('/webhook', express.json(), async (req, res) =&gt; {\n    try {\n        const payload = req.body;\n        // Process payload asynchronously\n        await processWebhook(payload);\n        res.sendStatus(200);\n    } catch (err) {\n        console.error(`Webhook processing error: ${err.message}`);\n        res.sendStatus(200); // Always acknowledge receipt\n    }\n});\n</code></pre> <pre><code>@RestController\npublic class WebhookController {\n    @PostMapping(\"/webhook\")\n    public ResponseEntity&lt;Void&gt; handleWebhook(@RequestBody String payload) {\n        try {\n            // Process payload asynchronously\n            webhookService.processWebhook(payload);\n            return ResponseEntity.ok().build();\n        } catch (Exception e) {\n            logger.error(\"Webhook processing error: \" + e.getMessage());\n            return ResponseEntity.ok().build(); // Always acknowledge receipt\n        }\n    }\n}\n</code></pre> <pre><code>&lt;?php\n\n// Receive POST data\n$rawPayload = file_get_contents('php://input');\n\ntry {\n    // Parse JSON payload\n    $payload = json_decode($rawPayload, true);\n    if (json_last_error() !== JSON_ERROR_NONE) {\n        throw new Exception('Invalid JSON payload');\n    }\n\n    // Log webhook receipt\n    error_log('Webhook received: ' . $rawPayload);\n\n    // Process payload asynchronously (using a job queue system like Laravel Queue or Gearman)\n    processWebhookAsync($payload);\n\n    // Always return 200 response\n    http_response_code(200);\n    echo json_encode(['status' =&gt; 'success']);\n\n} catch (Exception $e) {\n    error_log('Webhook processing error: ' . $e-&gt;getMessage());\n\n    // Still return 200 to acknowledge receipt\n    http_response_code(200);\n    echo json_encode(['status' =&gt; 'received']);\n}\n\n/**\n    * Example async processing function\n    * In practice, this should use a proper job queue\n    */\nfunction processWebhookAsync($payload) {\n    // Add to job queue or process directly\n    // Example using Laravel Queue:\n    // ProcessWebhook::dispatch($payload);\n}\n</code></pre>"},{"location":"chat/webhooks/#technical-specifications","title":"Technical Specifications","text":""},{"location":"chat/webhooks/#delivery-system","title":"Delivery System","text":"<ul> <li>Protocol: HTTPS only (for security)</li> <li>Method: POST</li> <li>Content-Type: application/json</li> <li>Timeout: 30 seconds per request</li> <li>Retry Logic: 3 attempts with exponential backoff</li> </ul>"},{"location":"chat/webhooks/#retry-configuration","title":"Retry Configuration","text":"<ul> <li>Maximum Attempts: 3</li> <li>Backoff Schedule:<ul> <li>1st retry: 4 seconds wait</li> <li>2nd retry: 8 seconds wait</li> <li>3rd retry: 10 seconds wait</li> </ul> </li> <li>Retry Conditions:<ul> <li>Network errors</li> <li>Timeouts</li> <li>Non-2xx responses</li> </ul> </li> </ul>"},{"location":"chat/webhooks/#security-requirements","title":"Security Requirements","text":"<ul> <li>HTTPS protocol mandatory</li> <li>Valid SSL certificate</li> <li>Public endpoint accessibility</li> <li>2xx status code response expected</li> <li>IP whitelist recommended</li> <li>Request signing (optional but recommended)</li> </ul>"},{"location":"chat/webhooks/#webhook-payload","title":"Webhook Payload","text":""},{"location":"chat/webhooks/#structure","title":"Structure","text":"<pre><code>{\n    \"conversation_id\": \"uuid-string\",\n    \"data\": {\n        \"id\": \"message-uuid\",\n        \"content\": \"Message content\",\n        \"content_type\": \"TEXT\",\n        \"filename\": \"document.pdf\", // Only present for media messages\n        \"type\": \"USER_INPUT\",\n        \"channel\": \"API\",\n        \"status\": \"RECEIVED\",\n        \"metadata\": {\n            // Optional custom metadata\n        },\n        \"created_by\": \"user123\",\n        \"updated_by\": \"user123\",\n        \"created_at\": \"2024-03-21T10:00:00Z\",\n        \"updated_at\": \"2024-03-21T10:00:00Z\"\n    },\n    \"timestamp\": \"2024-03-21T10:00:00.000Z\"\n}\n</code></pre>"},{"location":"chat/webhooks/#field-reference","title":"Field Reference","text":"Field Type Required Description conversation_id UUID Yes Unique identifier for the conversation data.id UUID Yes Unique identifier for the message data.content String Yes The actual message content data.content_type Enum Yes Type of content (TEXT, IMAGE, VIDEO, DOCUMENT, AUDIO) data.filename String No Present only for media messages data.type Enum Yes Message type (USER_INPUT, SYSTEM, BOT) data.channel Enum Yes Communication channel (API, WHATSAPP, SMS) data.status Enum Yes Message status (RECEIVED, PROCESSED, FAILED) data.metadata Object No Custom metadata for the message data.created_by String Yes ID or name of the creator data.updated_by String Yes ID or name of the last modifier data.created_at ISO 8601 Yes Creation timestamp data.updated_at ISO 8601 Yes Last update timestamp timestamp ISO 8601 Yes Webhook event timestamp"},{"location":"chat/webhooks/#best-practices","title":"Best Practices","text":""},{"location":"chat/webhooks/#performance","title":"Performance","text":"<ol> <li> <p>Quick Acknowledgment</p> <ul> <li>Return 2xx status immediately</li> <li>Process webhook data asynchronously</li> <li>Keep handler logic minimal</li> <li>Use background workers for processing</li> </ul> </li> <li> <p>Idempotency Handling</p> <pre><code>def handle_webhook(payload):\n    message_id = payload['data']['id']\n    if is_already_processed(message_id):\n        logger.info(f\"Skipping duplicate message: {message_id}\")\n        return\n\n    try:\n        process_message(payload)\n        mark_as_processed(message_id)\n    except Exception as e:\n        logger.error(f\"Processing failed for {message_id}: {str(e)}\")\n        raise\n</code></pre> </li> </ol>"},{"location":"chat/webhooks/#error-handling","title":"Error Handling","text":"<ol> <li> <p>Graceful Recovery</p> <pre><code>def webhook_handler(request):\n    try:\n        payload = json.loads(request.body)\n        validate_payload(payload)  # Validate required fields\n\n        # Store raw webhook for backup\n        store_raw_webhook(payload)\n\n        # Process asynchronously\n        process_webhook.delay(payload)\n\n    except json.JSONDecodeError:\n        logger.error(\"Invalid JSON payload\")\n    except ValidationError as e:\n        logger.error(f\"Validation failed: {str(e)}\")\n    except Exception as e:\n        logger.exception(\"Webhook processing failed\")\n        store_failed_webhook(payload)\n\n    # Always acknowledge receipt\n    return HttpResponse(status=200)\n</code></pre> </li> <li> <p>Logging Best Practices <pre><code>def log_webhook(payload):\n    logger.info(\"Webhook received\", extra={\n        'conversation_id': payload['conversation_id'],\n        'message_id': payload['data']['id'],\n        'content_type': payload['data']['content_type'],\n        'channel': payload['data']['channel'],\n        'timestamp': payload['timestamp']\n    })\n</code></pre></p> </li> </ol>"},{"location":"chat/webhooks/#testing-development","title":"Testing &amp; Development","text":""},{"location":"chat/webhooks/#local-testing","title":"Local Testing","text":"<ol> <li> <p>Using ngrok</p> <pre><code># Start ngrok\nngrok http 8000\n\n# Update webhook URL\n{\n    \"config\": {\n        \"callback_url\": \"https://your-ngrok-url/webhook\"\n    }\n}\n</code></pre> </li> <li> <p>Manual Testing <pre><code># Test payload generator\ndef generate_test_payload():\n    return {\n        \"conversation_id\": str(uuid.uuid4()),\n        \"data\": {\n            \"id\": str(uuid.uuid4()),\n            \"content\": \"Test message\",\n            \"content_type\": \"TEXT\",\n            \"type\": \"USER_INPUT\",\n            \"channel\": \"API\",\n            \"status\": \"RECEIVED\",\n            \"created_at\": datetime.now().isoformat(),\n            \"updated_at\": datetime.now().isoformat()\n        },\n        \"timestamp\": datetime.now().isoformat()\n    }\n</code></pre></p> </li> </ol>"},{"location":"chat/webhooks/#webhook-testing-tools","title":"Webhook Testing Tools","text":"<ol> <li> <p>webhook.site</p> <ul> <li>Quick webhook inspection</li> <li>Real-time request monitoring</li> <li>Headers and payload validation</li> <li>Response simulation</li> </ul> </li> <li> <p>Custom Test Suite</p> <pre><code>class WebhookTests(TestCase):\n    def test_webhook_handler(self):\n        payload = generate_test_payload()\n        response = client.post(\n            '/webhook',\n            json=payload,\n            headers={'Content-Type': 'application/json'}\n        )\n        self.assertEqual(response.status_code, 200)\n\n    def test_invalid_payload(self):\n        response = client.post(\n            '/webhook',\n            data=\"invalid json\",\n            headers={'Content-Type': 'application/json'}\n        )\n        self.assertEqual(response.status_code, 200)\n</code></pre> </li> </ol>"},{"location":"chat/webhooks/#monitoring-troubleshooting","title":"Monitoring &amp; Troubleshooting","text":""},{"location":"chat/webhooks/#health-checks","title":"Health Checks","text":"<ol> <li> <p>Metrics to Monitor</p> <ul> <li>Webhook delivery success rate</li> <li>Average response time</li> <li>Retry attempt counts</li> <li>Error rates by type</li> <li>Processing time distribution</li> </ul> </li> <li> <p>Alerting Rules</p> <ul> <li>High error rate threshold</li> <li>Response time degradation</li> <li>Retry count spikes</li> <li>Failed delivery clusters</li> </ul> </li> </ol>"},{"location":"chat/webhooks/#common-issues-solutions","title":"Common Issues &amp; Solutions","text":"Issue Possible Causes Solution Timeouts Slow processing Implement async processing Heavy payload Optimize payload size Network latency Reduce processing time SSL Errors Invalid certificate Update SSL certificate Expired certificate Set up auto-renewal Certificate mismatch Verify domain matching 404 Errors Invalid URL Check webhook configuration URL changed Update webhook URL Service unavailable Verify service status"},{"location":"chat/webhooks/#debug-checklist","title":"Debug Checklist","text":"<ul> <li>Verify webhook URL configuration</li> <li>Check SSL certificate validity</li> <li>Monitor server logs for errors</li> <li>Validate payload format</li> <li>Test endpoint accessibility</li> <li>Verify network connectivity</li> <li>Check rate limiting</li> <li>Monitor system resources</li> </ul>"},{"location":"chat/webhooks/#support","title":"Support","text":"<p>For webhook-related assistance, please provide:</p> <ul> <li>Conversation ID</li> <li>Message ID</li> <li>Timestamp of issue</li> <li>Server logs</li> <li>Webhook configuration</li> <li>Error messages</li> <li>Retry attempt logs</li> </ul>"},{"location":"chat/webhooks/#rate-limiting","title":"Rate Limiting","text":"<ul> <li>Maximum 10 concurrent webhook deliveries</li> <li>Maximum 100 webhooks per minute per endpoint</li> <li>Automatic back-pressure handling</li> <li>Rate limit headers included in responses</li> </ul>"}]}